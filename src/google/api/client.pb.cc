// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/client.proto

#include "google/api/client.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CppSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DotnetSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GoSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_JavaSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MethodSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NodeSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PhpSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PythonSettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fclient_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RubySettings_google_2fapi_2fclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
namespace google {
namespace api {
class CommonLanguageSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommonLanguageSettings> _instance;
} _CommonLanguageSettings_default_instance_;
class ClientLibrarySettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientLibrarySettings> _instance;
} _ClientLibrarySettings_default_instance_;
class PublishingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Publishing> _instance;
} _Publishing_default_instance_;
class JavaSettings_ServiceClassNamesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JavaSettings_ServiceClassNamesEntry_DoNotUse> _instance;
} _JavaSettings_ServiceClassNamesEntry_DoNotUse_default_instance_;
class JavaSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JavaSettings> _instance;
} _JavaSettings_default_instance_;
class CppSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CppSettings> _instance;
} _CppSettings_default_instance_;
class PhpSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhpSettings> _instance;
} _PhpSettings_default_instance_;
class PythonSettings_ExperimentalFeaturesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PythonSettings_ExperimentalFeatures> _instance;
} _PythonSettings_ExperimentalFeatures_default_instance_;
class PythonSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PythonSettings> _instance;
} _PythonSettings_default_instance_;
class NodeSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NodeSettings> _instance;
} _NodeSettings_default_instance_;
class DotnetSettings_RenamedServicesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DotnetSettings_RenamedServicesEntry_DoNotUse> _instance;
} _DotnetSettings_RenamedServicesEntry_DoNotUse_default_instance_;
class DotnetSettings_RenamedResourcesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DotnetSettings_RenamedResourcesEntry_DoNotUse> _instance;
} _DotnetSettings_RenamedResourcesEntry_DoNotUse_default_instance_;
class DotnetSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DotnetSettings> _instance;
} _DotnetSettings_default_instance_;
class RubySettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RubySettings> _instance;
} _RubySettings_default_instance_;
class GoSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoSettings> _instance;
} _GoSettings_default_instance_;
class MethodSettings_LongRunningDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MethodSettings_LongRunning> _instance;
} _MethodSettings_LongRunning_default_instance_;
class MethodSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MethodSettings> _instance;
} _MethodSettings_default_instance_;
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_ClientLibrarySettings_default_instance_;
    new (ptr) ::google::api::ClientLibrarySettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::ClientLibrarySettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 8, 0, InitDefaultsscc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_JavaSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_CppSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_PhpSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_PythonSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_NodeSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_DotnetSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_RubySettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_GoSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_CommonLanguageSettings_default_instance_;
    new (ptr) ::google::api::CommonLanguageSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::CommonLanguageSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto}, {}};

static void InitDefaultsscc_info_CppSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_CppSettings_default_instance_;
    new (ptr) ::google::api::CppSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::CppSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CppSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CppSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_DotnetSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_DotnetSettings_default_instance_;
    new (ptr) ::google::api::DotnetSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::DotnetSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DotnetSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_DotnetSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,
      &scc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_DotnetSettings_RenamedResourcesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse();
  }
  ::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto}, {}};

static void InitDefaultsscc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_DotnetSettings_RenamedServicesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse();
  }
  ::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto}, {}};

static void InitDefaultsscc_info_GoSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_GoSettings_default_instance_;
    new (ptr) ::google::api::GoSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::GoSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GoSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GoSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_JavaSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_JavaSettings_default_instance_;
    new (ptr) ::google::api::JavaSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::JavaSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_JavaSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_JavaSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_JavaSettings_ServiceClassNamesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse();
  }
  ::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto}, {}};

static void InitDefaultsscc_info_MethodSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MethodSettings_default_instance_;
    new (ptr) ::google::api::MethodSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MethodSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MethodSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MethodSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MethodSettings_LongRunning_default_instance_;
    new (ptr) ::google::api::MethodSettings_LongRunning();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MethodSettings_LongRunning::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_NodeSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_NodeSettings_default_instance_;
    new (ptr) ::google::api::NodeSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::NodeSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NodeSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_NodeSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_PhpSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_PhpSettings_default_instance_;
    new (ptr) ::google::api::PhpSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::PhpSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PhpSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PhpSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_Publishing_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Publishing_default_instance_;
    new (ptr) ::google::api::Publishing();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Publishing::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Publishing_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Publishing_google_2fapi_2fclient_2eproto}, {
      &scc_info_MethodSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_PythonSettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_PythonSettings_default_instance_;
    new (ptr) ::google::api::PythonSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::PythonSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PythonSettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PythonSettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,
      &scc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto.base,}};

static void InitDefaultsscc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_PythonSettings_ExperimentalFeatures_default_instance_;
    new (ptr) ::google::api::PythonSettings_ExperimentalFeatures();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::PythonSettings_ExperimentalFeatures::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto}, {}};

static void InitDefaultsscc_info_RubySettings_google_2fapi_2fclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_RubySettings_default_instance_;
    new (ptr) ::google::api::RubySettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::RubySettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RubySettings_google_2fapi_2fclient_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RubySettings_google_2fapi_2fclient_2eproto}, {
      &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fclient_2eproto[17];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fclient_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fclient_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::CommonLanguageSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::CommonLanguageSettings, reference_docs_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::CommonLanguageSettings, destinations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, version_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, launch_stage_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, rest_numeric_enums_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, java_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, cpp_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, php_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, python_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, node_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, dotnet_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, ruby_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::ClientLibrarySettings, go_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, method_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, new_issue_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, documentation_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, api_short_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, github_label_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, codeowner_github_teams_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, doc_tag_prefix_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, organization_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, library_settings_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, proto_reference_documentation_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::Publishing, rest_reference_documentation_uri_),
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings, library_package_),
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings, service_class_names_),
  PROTOBUF_FIELD_OFFSET(::google::api::JavaSettings, common_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::CppSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::CppSettings, common_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::PhpSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::PhpSettings, common_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::PythonSettings_ExperimentalFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::PythonSettings_ExperimentalFeatures, rest_async_io_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::PythonSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::PythonSettings, common_),
  PROTOBUF_FIELD_OFFSET(::google::api::PythonSettings, experimental_features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::NodeSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::NodeSettings, common_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, common_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, renamed_services_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, renamed_resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, ignored_resources_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, forced_namespace_aliases_),
  PROTOBUF_FIELD_OFFSET(::google::api::DotnetSettings, handwritten_signatures_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::RubySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::RubySettings, common_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::GoSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::GoSettings, common_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings_LongRunning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings_LongRunning, initial_poll_delay_),
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings_LongRunning, poll_delay_multiplier_),
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings_LongRunning, max_poll_delay_),
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings_LongRunning, total_poll_timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings, selector_),
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings, long_running_),
  PROTOBUF_FIELD_OFFSET(::google::api::MethodSettings, auto_populated_fields_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::CommonLanguageSettings)},
  { 7, -1, sizeof(::google::api::ClientLibrarySettings)},
  { 23, -1, sizeof(::google::api::Publishing)},
  { 39, 46, sizeof(::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse)},
  { 48, -1, sizeof(::google::api::JavaSettings)},
  { 56, -1, sizeof(::google::api::CppSettings)},
  { 62, -1, sizeof(::google::api::PhpSettings)},
  { 68, -1, sizeof(::google::api::PythonSettings_ExperimentalFeatures)},
  { 74, -1, sizeof(::google::api::PythonSettings)},
  { 81, -1, sizeof(::google::api::NodeSettings)},
  { 87, 94, sizeof(::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse)},
  { 96, 103, sizeof(::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse)},
  { 105, -1, sizeof(::google::api::DotnetSettings)},
  { 116, -1, sizeof(::google::api::RubySettings)},
  { 122, -1, sizeof(::google::api::GoSettings)},
  { 128, -1, sizeof(::google::api::MethodSettings_LongRunning)},
  { 137, -1, sizeof(::google::api::MethodSettings)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_CommonLanguageSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_ClientLibrarySettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_Publishing_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_JavaSettings_ServiceClassNamesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_JavaSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_CppSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_PhpSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_PythonSettings_ExperimentalFeatures_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_PythonSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_NodeSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_DotnetSettings_RenamedServicesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_DotnetSettings_RenamedResourcesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_DotnetSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_RubySettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_GoSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MethodSettings_LongRunning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::_MethodSettings_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027google/api/client.proto\022\ngoogle.api\032\035g"
  "oogle/api/launch_stage.proto\032 google/pro"
  "tobuf/descriptor.proto\032\036google/protobuf/"
  "duration.proto\"t\n\026CommonLanguageSettings"
  "\022\036\n\022reference_docs_uri\030\001 \001(\tB\002\030\001\022:\n\014dest"
  "inations\030\002 \003(\0162$.google.api.ClientLibrar"
  "yDestination\"\373\003\n\025ClientLibrarySettings\022\017"
  "\n\007version\030\001 \001(\t\022-\n\014launch_stage\030\002 \001(\0162\027."
  "google.api.LaunchStage\022\032\n\022rest_numeric_e"
  "nums\030\003 \001(\010\022/\n\rjava_settings\030\025 \001(\0132\030.goog"
  "le.api.JavaSettings\022-\n\014cpp_settings\030\026 \001("
  "\0132\027.google.api.CppSettings\022-\n\014php_settin"
  "gs\030\027 \001(\0132\027.google.api.PhpSettings\0223\n\017pyt"
  "hon_settings\030\030 \001(\0132\032.google.api.PythonSe"
  "ttings\022/\n\rnode_settings\030\031 \001(\0132\030.google.a"
  "pi.NodeSettings\0223\n\017dotnet_settings\030\032 \001(\013"
  "2\032.google.api.DotnetSettings\022/\n\rruby_set"
  "tings\030\033 \001(\0132\030.google.api.RubySettings\022+\n"
  "\013go_settings\030\034 \001(\0132\026.google.api.GoSettin"
  "gs\"\250\003\n\nPublishing\0223\n\017method_settings\030\002 \003"
  "(\0132\032.google.api.MethodSettings\022\025\n\rnew_is"
  "sue_uri\030e \001(\t\022\031\n\021documentation_uri\030f \001(\t"
  "\022\026\n\016api_short_name\030g \001(\t\022\024\n\014github_label"
  "\030h \001(\t\022\036\n\026codeowner_github_teams\030i \003(\t\022\026"
  "\n\016doc_tag_prefix\030j \001(\t\022;\n\014organization\030k"
  " \001(\0162%.google.api.ClientLibraryOrganizat"
  "ion\022;\n\020library_settings\030m \003(\0132!.google.a"
  "pi.ClientLibrarySettings\022)\n!proto_refere"
  "nce_documentation_uri\030n \001(\t\022(\n rest_refe"
  "rence_documentation_uri\030o \001(\t\"\343\001\n\014JavaSe"
  "ttings\022\027\n\017library_package\030\001 \001(\t\022L\n\023servi"
  "ce_class_names\030\002 \003(\0132/.google.api.JavaSe"
  "ttings.ServiceClassNamesEntry\0222\n\006common\030"
  "\003 \001(\0132\".google.api.CommonLanguageSetting"
  "s\0328\n\026ServiceClassNamesEntry\022\013\n\003key\030\001 \001(\t"
  "\022\r\n\005value\030\002 \001(\t:\0028\001\"A\n\013CppSettings\0222\n\006co"
  "mmon\030\001 \001(\0132\".google.api.CommonLanguageSe"
  "ttings\"A\n\013PhpSettings\0222\n\006common\030\001 \001(\0132\"."
  "google.api.CommonLanguageSettings\"\313\001\n\016Py"
  "thonSettings\0222\n\006common\030\001 \001(\0132\".google.ap"
  "i.CommonLanguageSettings\022N\n\025experimental"
  "_features\030\002 \001(\0132/.google.api.PythonSetti"
  "ngs.ExperimentalFeatures\0325\n\024Experimental"
  "Features\022\035\n\025rest_async_io_enabled\030\001 \001(\010\""
  "B\n\014NodeSettings\0222\n\006common\030\001 \001(\0132\".google"
  ".api.CommonLanguageSettings\"\252\003\n\016DotnetSe"
  "ttings\0222\n\006common\030\001 \001(\0132\".google.api.Comm"
  "onLanguageSettings\022I\n\020renamed_services\030\002"
  " \003(\0132/.google.api.DotnetSettings.Renamed"
  "ServicesEntry\022K\n\021renamed_resources\030\003 \003(\013"
  "20.google.api.DotnetSettings.RenamedReso"
  "urcesEntry\022\031\n\021ignored_resources\030\004 \003(\t\022 \n"
  "\030forced_namespace_aliases\030\005 \003(\t\022\036\n\026handw"
  "ritten_signatures\030\006 \003(\t\0326\n\024RenamedServic"
  "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032"
  "7\n\025RenamedResourcesEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\t:\0028\001\"B\n\014RubySettings\0222\n\006comm"
  "on\030\001 \001(\0132\".google.api.CommonLanguageSett"
  "ings\"@\n\nGoSettings\0222\n\006common\030\001 \001(\0132\".goo"
  "gle.api.CommonLanguageSettings\"\317\002\n\016Metho"
  "dSettings\022\020\n\010selector\030\001 \001(\t\022<\n\014long_runn"
  "ing\030\002 \001(\0132&.google.api.MethodSettings.Lo"
  "ngRunning\022\035\n\025auto_populated_fields\030\003 \003(\t"
  "\032\315\001\n\013LongRunning\0225\n\022initial_poll_delay\030\001"
  " \001(\0132\031.google.protobuf.Duration\022\035\n\025poll_"
  "delay_multiplier\030\002 \001(\002\0221\n\016max_poll_delay"
  "\030\003 \001(\0132\031.google.protobuf.Duration\0225\n\022tot"
  "al_poll_timeout\030\004 \001(\0132\031.google.protobuf."
  "Duration*\243\001\n\031ClientLibraryOrganization\022+"
  "\n\'CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIE"
  "D\020\000\022\t\n\005CLOUD\020\001\022\007\n\003ADS\020\002\022\n\n\006PHOTOS\020\003\022\017\n\013S"
  "TREET_VIEW\020\004\022\014\n\010SHOPPING\020\005\022\007\n\003GEO\020\006\022\021\n\rG"
  "ENERATIVE_AI\020\007*g\n\030ClientLibraryDestinati"
  "on\022*\n&CLIENT_LIBRARY_DESTINATION_UNSPECI"
  "FIED\020\000\022\n\n\006GITHUB\020\n\022\023\n\017PACKAGE_MANAGER\020\024:"
  "9\n\020method_signature\022\036.google.protobuf.Me"
  "thodOptions\030\233\010 \003(\t:6\n\014default_host\022\037.goo"
  "gle.protobuf.ServiceOptions\030\231\010 \001(\t:6\n\014oa"
  "uth_scopes\022\037.google.protobuf.ServiceOpti"
  "ons\030\232\010 \001(\t:8\n\013api_version\022\037.google.proto"
  "buf.ServiceOptions\030\301\272\253\372\001 \001(\tBi\n\016com.goog"
  "le.apiB\013ClientProtoP\001ZAgoogle.golang.org"
  "/genproto/googleapis/api/annotations;ann"
  "otations\242\002\004GAPIb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fclient_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2flaunch_5fstage_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fclient_2eproto_sccs[17] = {
  &scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_CppSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_DotnetSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_DotnetSettings_RenamedResourcesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,
  &scc_info_DotnetSettings_RenamedServicesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,
  &scc_info_GoSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_JavaSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_JavaSettings_ServiceClassNamesEntry_DoNotUse_google_2fapi_2fclient_2eproto.base,
  &scc_info_MethodSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto.base,
  &scc_info_NodeSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_PhpSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_Publishing_google_2fapi_2fclient_2eproto.base,
  &scc_info_PythonSettings_google_2fapi_2fclient_2eproto.base,
  &scc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto.base,
  &scc_info_RubySettings_google_2fapi_2fclient_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fclient_2eproto = {
  false, false, descriptor_table_protodef_google_2fapi_2fclient_2eproto, "google/api/client.proto", 3343,
  &descriptor_table_google_2fapi_2fclient_2eproto_once, descriptor_table_google_2fapi_2fclient_2eproto_sccs, descriptor_table_google_2fapi_2fclient_2eproto_deps, 17, 3,
  schemas, file_default_instances, TableStruct_google_2fapi_2fclient_2eproto::offsets,
  file_level_metadata_google_2fapi_2fclient_2eproto, 17, file_level_enum_descriptors_google_2fapi_2fclient_2eproto, file_level_service_descriptors_google_2fapi_2fclient_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fclient_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fclient_2eproto)), true);
namespace google {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientLibraryOrganization_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fclient_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fclient_2eproto[0];
}
bool ClientLibraryOrganization_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientLibraryDestination_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fclient_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fclient_2eproto[1];
}
bool ClientLibraryDestination_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 20:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CommonLanguageSettings::InitAsDefaultInstance() {
}
class CommonLanguageSettings::_Internal {
 public:
};

CommonLanguageSettings::CommonLanguageSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  destinations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.CommonLanguageSettings)
}
CommonLanguageSettings::CommonLanguageSettings(const CommonLanguageSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      destinations_(from.destinations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reference_docs_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reference_docs_uri().empty()) {
    reference_docs_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_reference_docs_uri(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.CommonLanguageSettings)
}

void CommonLanguageSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base);
  reference_docs_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CommonLanguageSettings::~CommonLanguageSettings() {
  // @@protoc_insertion_point(destructor:google.api.CommonLanguageSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommonLanguageSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reference_docs_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommonLanguageSettings::ArenaDtor(void* object) {
  CommonLanguageSettings* _this = reinterpret_cast< CommonLanguageSettings* >(object);
  (void)_this;
}
void CommonLanguageSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonLanguageSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommonLanguageSettings& CommonLanguageSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommonLanguageSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void CommonLanguageSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.CommonLanguageSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destinations_.Clear();
  reference_docs_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonLanguageSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reference_docs_uri = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reference_docs_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.CommonLanguageSettings.reference_docs_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.ClientLibraryDestination destinations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_destinations(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_destinations(static_cast<::google::api::ClientLibraryDestination>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonLanguageSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.CommonLanguageSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reference_docs_uri = 1 [deprecated = true];
  if (this->reference_docs_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reference_docs_uri().data(), static_cast<int>(this->_internal_reference_docs_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.CommonLanguageSettings.reference_docs_uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reference_docs_uri(), target);
  }

  // repeated .google.api.ClientLibraryDestination destinations = 2;
  {
    int byte_size = _destinations_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, destinations_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.CommonLanguageSettings)
  return target;
}

size_t CommonLanguageSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.CommonLanguageSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.ClientLibraryDestination destinations = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_destinations_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_destinations(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _destinations_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string reference_docs_uri = 1 [deprecated = true];
  if (this->reference_docs_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reference_docs_uri());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonLanguageSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.CommonLanguageSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonLanguageSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonLanguageSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.CommonLanguageSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.CommonLanguageSettings)
    MergeFrom(*source);
  }
}

void CommonLanguageSettings::MergeFrom(const CommonLanguageSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.CommonLanguageSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  destinations_.MergeFrom(from.destinations_);
  if (from.reference_docs_uri().size() > 0) {
    _internal_set_reference_docs_uri(from._internal_reference_docs_uri());
  }
}

void CommonLanguageSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.CommonLanguageSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonLanguageSettings::CopyFrom(const CommonLanguageSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.CommonLanguageSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonLanguageSettings::IsInitialized() const {
  return true;
}

void CommonLanguageSettings::InternalSwap(CommonLanguageSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  destinations_.InternalSwap(&other->destinations_);
  reference_docs_uri_.Swap(&other->reference_docs_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonLanguageSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientLibrarySettings::InitAsDefaultInstance() {
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->java_settings_ = const_cast< ::google::api::JavaSettings*>(
      ::google::api::JavaSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->cpp_settings_ = const_cast< ::google::api::CppSettings*>(
      ::google::api::CppSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->php_settings_ = const_cast< ::google::api::PhpSettings*>(
      ::google::api::PhpSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->python_settings_ = const_cast< ::google::api::PythonSettings*>(
      ::google::api::PythonSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->node_settings_ = const_cast< ::google::api::NodeSettings*>(
      ::google::api::NodeSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->dotnet_settings_ = const_cast< ::google::api::DotnetSettings*>(
      ::google::api::DotnetSettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->ruby_settings_ = const_cast< ::google::api::RubySettings*>(
      ::google::api::RubySettings::internal_default_instance());
  ::google::api::_ClientLibrarySettings_default_instance_._instance.get_mutable()->go_settings_ = const_cast< ::google::api::GoSettings*>(
      ::google::api::GoSettings::internal_default_instance());
}
class ClientLibrarySettings::_Internal {
 public:
  static const ::google::api::JavaSettings& java_settings(const ClientLibrarySettings* msg);
  static const ::google::api::CppSettings& cpp_settings(const ClientLibrarySettings* msg);
  static const ::google::api::PhpSettings& php_settings(const ClientLibrarySettings* msg);
  static const ::google::api::PythonSettings& python_settings(const ClientLibrarySettings* msg);
  static const ::google::api::NodeSettings& node_settings(const ClientLibrarySettings* msg);
  static const ::google::api::DotnetSettings& dotnet_settings(const ClientLibrarySettings* msg);
  static const ::google::api::RubySettings& ruby_settings(const ClientLibrarySettings* msg);
  static const ::google::api::GoSettings& go_settings(const ClientLibrarySettings* msg);
};

const ::google::api::JavaSettings&
ClientLibrarySettings::_Internal::java_settings(const ClientLibrarySettings* msg) {
  return *msg->java_settings_;
}
const ::google::api::CppSettings&
ClientLibrarySettings::_Internal::cpp_settings(const ClientLibrarySettings* msg) {
  return *msg->cpp_settings_;
}
const ::google::api::PhpSettings&
ClientLibrarySettings::_Internal::php_settings(const ClientLibrarySettings* msg) {
  return *msg->php_settings_;
}
const ::google::api::PythonSettings&
ClientLibrarySettings::_Internal::python_settings(const ClientLibrarySettings* msg) {
  return *msg->python_settings_;
}
const ::google::api::NodeSettings&
ClientLibrarySettings::_Internal::node_settings(const ClientLibrarySettings* msg) {
  return *msg->node_settings_;
}
const ::google::api::DotnetSettings&
ClientLibrarySettings::_Internal::dotnet_settings(const ClientLibrarySettings* msg) {
  return *msg->dotnet_settings_;
}
const ::google::api::RubySettings&
ClientLibrarySettings::_Internal::ruby_settings(const ClientLibrarySettings* msg) {
  return *msg->ruby_settings_;
}
const ::google::api::GoSettings&
ClientLibrarySettings::_Internal::go_settings(const ClientLibrarySettings* msg) {
  return *msg->go_settings_;
}
ClientLibrarySettings::ClientLibrarySettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.ClientLibrarySettings)
}
ClientLibrarySettings::ClientLibrarySettings(const ClientLibrarySettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  if (from._internal_has_java_settings()) {
    java_settings_ = new ::google::api::JavaSettings(*from.java_settings_);
  } else {
    java_settings_ = nullptr;
  }
  if (from._internal_has_cpp_settings()) {
    cpp_settings_ = new ::google::api::CppSettings(*from.cpp_settings_);
  } else {
    cpp_settings_ = nullptr;
  }
  if (from._internal_has_php_settings()) {
    php_settings_ = new ::google::api::PhpSettings(*from.php_settings_);
  } else {
    php_settings_ = nullptr;
  }
  if (from._internal_has_python_settings()) {
    python_settings_ = new ::google::api::PythonSettings(*from.python_settings_);
  } else {
    python_settings_ = nullptr;
  }
  if (from._internal_has_node_settings()) {
    node_settings_ = new ::google::api::NodeSettings(*from.node_settings_);
  } else {
    node_settings_ = nullptr;
  }
  if (from._internal_has_dotnet_settings()) {
    dotnet_settings_ = new ::google::api::DotnetSettings(*from.dotnet_settings_);
  } else {
    dotnet_settings_ = nullptr;
  }
  if (from._internal_has_ruby_settings()) {
    ruby_settings_ = new ::google::api::RubySettings(*from.ruby_settings_);
  } else {
    ruby_settings_ = nullptr;
  }
  if (from._internal_has_go_settings()) {
    go_settings_ = new ::google::api::GoSettings(*from.go_settings_);
  } else {
    go_settings_ = nullptr;
  }
  ::memcpy(&launch_stage_, &from.launch_stage_,
    static_cast<size_t>(reinterpret_cast<char*>(&rest_numeric_enums_) -
    reinterpret_cast<char*>(&launch_stage_)) + sizeof(rest_numeric_enums_));
  // @@protoc_insertion_point(copy_constructor:google.api.ClientLibrarySettings)
}

void ClientLibrarySettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&java_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rest_numeric_enums_) -
      reinterpret_cast<char*>(&java_settings_)) + sizeof(rest_numeric_enums_));
}

ClientLibrarySettings::~ClientLibrarySettings() {
  // @@protoc_insertion_point(destructor:google.api.ClientLibrarySettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientLibrarySettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete java_settings_;
  if (this != internal_default_instance()) delete cpp_settings_;
  if (this != internal_default_instance()) delete php_settings_;
  if (this != internal_default_instance()) delete python_settings_;
  if (this != internal_default_instance()) delete node_settings_;
  if (this != internal_default_instance()) delete dotnet_settings_;
  if (this != internal_default_instance()) delete ruby_settings_;
  if (this != internal_default_instance()) delete go_settings_;
}

void ClientLibrarySettings::ArenaDtor(void* object) {
  ClientLibrarySettings* _this = reinterpret_cast< ClientLibrarySettings* >(object);
  (void)_this;
}
void ClientLibrarySettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientLibrarySettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientLibrarySettings& ClientLibrarySettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientLibrarySettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void ClientLibrarySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ClientLibrarySettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && java_settings_ != nullptr) {
    delete java_settings_;
  }
  java_settings_ = nullptr;
  if (GetArena() == nullptr && cpp_settings_ != nullptr) {
    delete cpp_settings_;
  }
  cpp_settings_ = nullptr;
  if (GetArena() == nullptr && php_settings_ != nullptr) {
    delete php_settings_;
  }
  php_settings_ = nullptr;
  if (GetArena() == nullptr && python_settings_ != nullptr) {
    delete python_settings_;
  }
  python_settings_ = nullptr;
  if (GetArena() == nullptr && node_settings_ != nullptr) {
    delete node_settings_;
  }
  node_settings_ = nullptr;
  if (GetArena() == nullptr && dotnet_settings_ != nullptr) {
    delete dotnet_settings_;
  }
  dotnet_settings_ = nullptr;
  if (GetArena() == nullptr && ruby_settings_ != nullptr) {
    delete ruby_settings_;
  }
  ruby_settings_ = nullptr;
  if (GetArena() == nullptr && go_settings_ != nullptr) {
    delete go_settings_;
  }
  go_settings_ = nullptr;
  ::memset(&launch_stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rest_numeric_enums_) -
      reinterpret_cast<char*>(&launch_stage_)) + sizeof(rest_numeric_enums_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientLibrarySettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.ClientLibrarySettings.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.LaunchStage launch_stage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_launch_stage(static_cast<::google::api::LaunchStage>(val));
        } else goto handle_unusual;
        continue;
      // bool rest_numeric_enums = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rest_numeric_enums_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.JavaSettings java_settings = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_java_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.CppSettings cpp_settings = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_cpp_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.PhpSettings php_settings = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_php_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.PythonSettings python_settings = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_python_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.NodeSettings node_settings = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.DotnetSettings dotnet_settings = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_dotnet_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.RubySettings ruby_settings = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_ruby_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.GoSettings go_settings = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_go_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientLibrarySettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ClientLibrarySettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.ClientLibrarySettings.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // .google.api.LaunchStage launch_stage = 2;
  if (this->launch_stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_launch_stage(), target);
  }

  // bool rest_numeric_enums = 3;
  if (this->rest_numeric_enums() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_rest_numeric_enums(), target);
  }

  // .google.api.JavaSettings java_settings = 21;
  if (this->has_java_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::java_settings(this), target, stream);
  }

  // .google.api.CppSettings cpp_settings = 22;
  if (this->has_cpp_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::cpp_settings(this), target, stream);
  }

  // .google.api.PhpSettings php_settings = 23;
  if (this->has_php_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::php_settings(this), target, stream);
  }

  // .google.api.PythonSettings python_settings = 24;
  if (this->has_python_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::python_settings(this), target, stream);
  }

  // .google.api.NodeSettings node_settings = 25;
  if (this->has_node_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::node_settings(this), target, stream);
  }

  // .google.api.DotnetSettings dotnet_settings = 26;
  if (this->has_dotnet_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::dotnet_settings(this), target, stream);
  }

  // .google.api.RubySettings ruby_settings = 27;
  if (this->has_ruby_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::ruby_settings(this), target, stream);
  }

  // .google.api.GoSettings go_settings = 28;
  if (this->has_go_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        28, _Internal::go_settings(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.ClientLibrarySettings)
  return target;
}

size_t ClientLibrarySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ClientLibrarySettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .google.api.JavaSettings java_settings = 21;
  if (this->has_java_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *java_settings_);
  }

  // .google.api.CppSettings cpp_settings = 22;
  if (this->has_cpp_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cpp_settings_);
  }

  // .google.api.PhpSettings php_settings = 23;
  if (this->has_php_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *php_settings_);
  }

  // .google.api.PythonSettings python_settings = 24;
  if (this->has_python_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *python_settings_);
  }

  // .google.api.NodeSettings node_settings = 25;
  if (this->has_node_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_settings_);
  }

  // .google.api.DotnetSettings dotnet_settings = 26;
  if (this->has_dotnet_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dotnet_settings_);
  }

  // .google.api.RubySettings ruby_settings = 27;
  if (this->has_ruby_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ruby_settings_);
  }

  // .google.api.GoSettings go_settings = 28;
  if (this->has_go_settings()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *go_settings_);
  }

  // .google.api.LaunchStage launch_stage = 2;
  if (this->launch_stage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_launch_stage());
  }

  // bool rest_numeric_enums = 3;
  if (this->rest_numeric_enums() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientLibrarySettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ClientLibrarySettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLibrarySettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientLibrarySettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ClientLibrarySettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ClientLibrarySettings)
    MergeFrom(*source);
  }
}

void ClientLibrarySettings::MergeFrom(const ClientLibrarySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ClientLibrarySettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.has_java_settings()) {
    _internal_mutable_java_settings()->::google::api::JavaSettings::MergeFrom(from._internal_java_settings());
  }
  if (from.has_cpp_settings()) {
    _internal_mutable_cpp_settings()->::google::api::CppSettings::MergeFrom(from._internal_cpp_settings());
  }
  if (from.has_php_settings()) {
    _internal_mutable_php_settings()->::google::api::PhpSettings::MergeFrom(from._internal_php_settings());
  }
  if (from.has_python_settings()) {
    _internal_mutable_python_settings()->::google::api::PythonSettings::MergeFrom(from._internal_python_settings());
  }
  if (from.has_node_settings()) {
    _internal_mutable_node_settings()->::google::api::NodeSettings::MergeFrom(from._internal_node_settings());
  }
  if (from.has_dotnet_settings()) {
    _internal_mutable_dotnet_settings()->::google::api::DotnetSettings::MergeFrom(from._internal_dotnet_settings());
  }
  if (from.has_ruby_settings()) {
    _internal_mutable_ruby_settings()->::google::api::RubySettings::MergeFrom(from._internal_ruby_settings());
  }
  if (from.has_go_settings()) {
    _internal_mutable_go_settings()->::google::api::GoSettings::MergeFrom(from._internal_go_settings());
  }
  if (from.launch_stage() != 0) {
    _internal_set_launch_stage(from._internal_launch_stage());
  }
  if (from.rest_numeric_enums() != 0) {
    _internal_set_rest_numeric_enums(from._internal_rest_numeric_enums());
  }
}

void ClientLibrarySettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ClientLibrarySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLibrarySettings::CopyFrom(const ClientLibrarySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ClientLibrarySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLibrarySettings::IsInitialized() const {
  return true;
}

void ClientLibrarySettings::InternalSwap(ClientLibrarySettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientLibrarySettings, rest_numeric_enums_)
      + sizeof(ClientLibrarySettings::rest_numeric_enums_)
      - PROTOBUF_FIELD_OFFSET(ClientLibrarySettings, java_settings_)>(
          reinterpret_cast<char*>(&java_settings_),
          reinterpret_cast<char*>(&other->java_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientLibrarySettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Publishing::InitAsDefaultInstance() {
}
class Publishing::_Internal {
 public:
};

Publishing::Publishing(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  method_settings_(arena),
  codeowner_github_teams_(arena),
  library_settings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.Publishing)
}
Publishing::Publishing(const Publishing& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      method_settings_(from.method_settings_),
      codeowner_github_teams_(from.codeowner_github_teams_),
      library_settings_(from.library_settings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_issue_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_issue_uri().empty()) {
    new_issue_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_issue_uri(),
      GetArena());
  }
  documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_documentation_uri().empty()) {
    documentation_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_documentation_uri(),
      GetArena());
  }
  api_short_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_api_short_name().empty()) {
    api_short_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_api_short_name(),
      GetArena());
  }
  github_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_github_label().empty()) {
    github_label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_github_label(),
      GetArena());
  }
  doc_tag_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_doc_tag_prefix().empty()) {
    doc_tag_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_doc_tag_prefix(),
      GetArena());
  }
  proto_reference_documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proto_reference_documentation_uri().empty()) {
    proto_reference_documentation_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proto_reference_documentation_uri(),
      GetArena());
  }
  rest_reference_documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rest_reference_documentation_uri().empty()) {
    rest_reference_documentation_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rest_reference_documentation_uri(),
      GetArena());
  }
  organization_ = from.organization_;
  // @@protoc_insertion_point(copy_constructor:google.api.Publishing)
}

void Publishing::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Publishing_google_2fapi_2fclient_2eproto.base);
  new_issue_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_short_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  github_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_tag_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_reference_documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rest_reference_documentation_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_ = 0;
}

Publishing::~Publishing() {
  // @@protoc_insertion_point(destructor:google.api.Publishing)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Publishing::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  new_issue_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  documentation_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_short_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  github_label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  doc_tag_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_reference_documentation_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rest_reference_documentation_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Publishing::ArenaDtor(void* object) {
  Publishing* _this = reinterpret_cast< Publishing* >(object);
  (void)_this;
}
void Publishing::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Publishing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Publishing& Publishing::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Publishing_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void Publishing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Publishing)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_settings_.Clear();
  codeowner_github_teams_.Clear();
  library_settings_.Clear();
  new_issue_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  documentation_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_short_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  github_label_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  doc_tag_prefix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proto_reference_documentation_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rest_reference_documentation_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  organization_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Publishing::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.MethodSettings method_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_method_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string new_issue_uri = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_new_issue_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.new_issue_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string documentation_uri = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_documentation_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.documentation_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string api_short_name = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_api_short_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.api_short_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string github_label = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_github_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.github_label"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string codeowner_github_teams = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_codeowner_github_teams();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.codeowner_github_teams"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<842>(ptr));
        } else goto handle_unusual;
        continue;
      // string doc_tag_prefix = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_doc_tag_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.doc_tag_prefix"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.ClientLibraryOrganization organization = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_organization(static_cast<::google::api::ClientLibraryOrganization>(val));
        } else goto handle_unusual;
        continue;
      // repeated .google.api.ClientLibrarySettings library_settings = 109;
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_library_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<874>(ptr));
        } else goto handle_unusual;
        continue;
      // string proto_reference_documentation_uri = 110;
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_proto_reference_documentation_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.proto_reference_documentation_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rest_reference_documentation_uri = 111;
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_rest_reference_documentation_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.Publishing.rest_reference_documentation_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Publishing::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Publishing)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MethodSettings method_settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_method_settings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_method_settings(i), target, stream);
  }

  // string new_issue_uri = 101;
  if (this->new_issue_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_issue_uri().data(), static_cast<int>(this->_internal_new_issue_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.new_issue_uri");
    target = stream->WriteStringMaybeAliased(
        101, this->_internal_new_issue_uri(), target);
  }

  // string documentation_uri = 102;
  if (this->documentation_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_documentation_uri().data(), static_cast<int>(this->_internal_documentation_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.documentation_uri");
    target = stream->WriteStringMaybeAliased(
        102, this->_internal_documentation_uri(), target);
  }

  // string api_short_name = 103;
  if (this->api_short_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_short_name().data(), static_cast<int>(this->_internal_api_short_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.api_short_name");
    target = stream->WriteStringMaybeAliased(
        103, this->_internal_api_short_name(), target);
  }

  // string github_label = 104;
  if (this->github_label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_github_label().data(), static_cast<int>(this->_internal_github_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.github_label");
    target = stream->WriteStringMaybeAliased(
        104, this->_internal_github_label(), target);
  }

  // repeated string codeowner_github_teams = 105;
  for (int i = 0, n = this->_internal_codeowner_github_teams_size(); i < n; i++) {
    const auto& s = this->_internal_codeowner_github_teams(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.codeowner_github_teams");
    target = stream->WriteString(105, s, target);
  }

  // string doc_tag_prefix = 106;
  if (this->doc_tag_prefix().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_doc_tag_prefix().data(), static_cast<int>(this->_internal_doc_tag_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.doc_tag_prefix");
    target = stream->WriteStringMaybeAliased(
        106, this->_internal_doc_tag_prefix(), target);
  }

  // .google.api.ClientLibraryOrganization organization = 107;
  if (this->organization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      107, this->_internal_organization(), target);
  }

  // repeated .google.api.ClientLibrarySettings library_settings = 109;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_library_settings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(109, this->_internal_library_settings(i), target, stream);
  }

  // string proto_reference_documentation_uri = 110;
  if (this->proto_reference_documentation_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_reference_documentation_uri().data(), static_cast<int>(this->_internal_proto_reference_documentation_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.proto_reference_documentation_uri");
    target = stream->WriteStringMaybeAliased(
        110, this->_internal_proto_reference_documentation_uri(), target);
  }

  // string rest_reference_documentation_uri = 111;
  if (this->rest_reference_documentation_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rest_reference_documentation_uri().data(), static_cast<int>(this->_internal_rest_reference_documentation_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.Publishing.rest_reference_documentation_uri");
    target = stream->WriteStringMaybeAliased(
        111, this->_internal_rest_reference_documentation_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Publishing)
  return target;
}

size_t Publishing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Publishing)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.MethodSettings method_settings = 2;
  total_size += 1UL * this->_internal_method_settings_size();
  for (const auto& msg : this->method_settings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string codeowner_github_teams = 105;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(codeowner_github_teams_.size());
  for (int i = 0, n = codeowner_github_teams_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      codeowner_github_teams_.Get(i));
  }

  // repeated .google.api.ClientLibrarySettings library_settings = 109;
  total_size += 2UL * this->_internal_library_settings_size();
  for (const auto& msg : this->library_settings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string new_issue_uri = 101;
  if (this->new_issue_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_issue_uri());
  }

  // string documentation_uri = 102;
  if (this->documentation_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_documentation_uri());
  }

  // string api_short_name = 103;
  if (this->api_short_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_short_name());
  }

  // string github_label = 104;
  if (this->github_label().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_github_label());
  }

  // string doc_tag_prefix = 106;
  if (this->doc_tag_prefix().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_doc_tag_prefix());
  }

  // string proto_reference_documentation_uri = 110;
  if (this->proto_reference_documentation_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_reference_documentation_uri());
  }

  // string rest_reference_documentation_uri = 111;
  if (this->rest_reference_documentation_uri().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rest_reference_documentation_uri());
  }

  // .google.api.ClientLibraryOrganization organization = 107;
  if (this->organization() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_organization());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Publishing::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Publishing)
  GOOGLE_DCHECK_NE(&from, this);
  const Publishing* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Publishing>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Publishing)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Publishing)
    MergeFrom(*source);
  }
}

void Publishing::MergeFrom(const Publishing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Publishing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  method_settings_.MergeFrom(from.method_settings_);
  codeowner_github_teams_.MergeFrom(from.codeowner_github_teams_);
  library_settings_.MergeFrom(from.library_settings_);
  if (from.new_issue_uri().size() > 0) {
    _internal_set_new_issue_uri(from._internal_new_issue_uri());
  }
  if (from.documentation_uri().size() > 0) {
    _internal_set_documentation_uri(from._internal_documentation_uri());
  }
  if (from.api_short_name().size() > 0) {
    _internal_set_api_short_name(from._internal_api_short_name());
  }
  if (from.github_label().size() > 0) {
    _internal_set_github_label(from._internal_github_label());
  }
  if (from.doc_tag_prefix().size() > 0) {
    _internal_set_doc_tag_prefix(from._internal_doc_tag_prefix());
  }
  if (from.proto_reference_documentation_uri().size() > 0) {
    _internal_set_proto_reference_documentation_uri(from._internal_proto_reference_documentation_uri());
  }
  if (from.rest_reference_documentation_uri().size() > 0) {
    _internal_set_rest_reference_documentation_uri(from._internal_rest_reference_documentation_uri());
  }
  if (from.organization() != 0) {
    _internal_set_organization(from._internal_organization());
  }
}

void Publishing::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Publishing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Publishing::CopyFrom(const Publishing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Publishing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Publishing::IsInitialized() const {
  return true;
}

void Publishing::InternalSwap(Publishing* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_settings_.InternalSwap(&other->method_settings_);
  codeowner_github_teams_.InternalSwap(&other->codeowner_github_teams_);
  library_settings_.InternalSwap(&other->library_settings_);
  new_issue_uri_.Swap(&other->new_issue_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  documentation_uri_.Swap(&other->documentation_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_short_name_.Swap(&other->api_short_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  github_label_.Swap(&other->github_label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  doc_tag_prefix_.Swap(&other->doc_tag_prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  proto_reference_documentation_uri_.Swap(&other->proto_reference_documentation_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rest_reference_documentation_uri_.Swap(&other->rest_reference_documentation_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Publishing::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

JavaSettings_ServiceClassNamesEntry_DoNotUse::JavaSettings_ServiceClassNamesEntry_DoNotUse() {}
JavaSettings_ServiceClassNamesEntry_DoNotUse::JavaSettings_ServiceClassNamesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void JavaSettings_ServiceClassNamesEntry_DoNotUse::MergeFrom(const JavaSettings_ServiceClassNamesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata JavaSettings_ServiceClassNamesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void JavaSettings_ServiceClassNamesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void JavaSettings::InitAsDefaultInstance() {
  ::google::api::_JavaSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class JavaSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const JavaSettings* msg);
};

const ::google::api::CommonLanguageSettings&
JavaSettings::_Internal::common(const JavaSettings* msg) {
  return *msg->common_;
}
JavaSettings::JavaSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  service_class_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.JavaSettings)
}
JavaSettings::JavaSettings(const JavaSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_class_names_.MergeFrom(from.service_class_names_);
  library_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_library_package().empty()) {
    library_package_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_library_package(),
      GetArena());
  }
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.JavaSettings)
}

void JavaSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JavaSettings_google_2fapi_2fclient_2eproto.base);
  library_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  common_ = nullptr;
}

JavaSettings::~JavaSettings() {
  // @@protoc_insertion_point(destructor:google.api.JavaSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JavaSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  library_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete common_;
}

void JavaSettings::ArenaDtor(void* object) {
  JavaSettings* _this = reinterpret_cast< JavaSettings* >(object);
  (void)_this;
}
void JavaSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JavaSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JavaSettings& JavaSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JavaSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void JavaSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.JavaSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_class_names_.Clear();
  library_package_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JavaSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string library_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_library_package();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.JavaSettings.library_package"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> service_class_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&service_class_names_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.api.CommonLanguageSettings common = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JavaSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.JavaSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string library_package = 1;
  if (this->library_package().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_library_package().data(), static_cast<int>(this->_internal_library_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.JavaSettings.library_package");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_library_package(), target);
  }

  // map<string, string> service_class_names = 2;
  if (!this->_internal_service_class_names().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.JavaSettings.ServiceClassNamesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_service_class_names().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_service_class_names().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_service_class_names().begin();
          it != this->_internal_service_class_names().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = JavaSettings_ServiceClassNamesEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_service_class_names().begin();
          it != this->_internal_service_class_names().end(); ++it) {
        target = JavaSettings_ServiceClassNamesEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.api.CommonLanguageSettings common = 3;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.JavaSettings)
  return target;
}

size_t JavaSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.JavaSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> service_class_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_service_class_names_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_service_class_names().begin();
      it != this->_internal_service_class_names().end(); ++it) {
    total_size += JavaSettings_ServiceClassNamesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string library_package = 1;
  if (this->library_package().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_library_package());
  }

  // .google.api.CommonLanguageSettings common = 3;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JavaSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.JavaSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const JavaSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JavaSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.JavaSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.JavaSettings)
    MergeFrom(*source);
  }
}

void JavaSettings::MergeFrom(const JavaSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.JavaSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_class_names_.MergeFrom(from.service_class_names_);
  if (from.library_package().size() > 0) {
    _internal_set_library_package(from._internal_library_package());
  }
  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void JavaSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.JavaSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JavaSettings::CopyFrom(const JavaSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.JavaSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JavaSettings::IsInitialized() const {
  return true;
}

void JavaSettings::InternalSwap(JavaSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_class_names_.Swap(&other->service_class_names_);
  library_package_.Swap(&other->library_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JavaSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CppSettings::InitAsDefaultInstance() {
  ::google::api::_CppSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class CppSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const CppSettings* msg);
};

const ::google::api::CommonLanguageSettings&
CppSettings::_Internal::common(const CppSettings* msg) {
  return *msg->common_;
}
CppSettings::CppSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.CppSettings)
}
CppSettings::CppSettings(const CppSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.CppSettings)
}

void CppSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CppSettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

CppSettings::~CppSettings() {
  // @@protoc_insertion_point(destructor:google.api.CppSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CppSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void CppSettings::ArenaDtor(void* object) {
  CppSettings* _this = reinterpret_cast< CppSettings* >(object);
  (void)_this;
}
void CppSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CppSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CppSettings& CppSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CppSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void CppSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.CppSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CppSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CppSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.CppSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.CppSettings)
  return target;
}

size_t CppSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.CppSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CppSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.CppSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CppSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CppSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.CppSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.CppSettings)
    MergeFrom(*source);
  }
}

void CppSettings::MergeFrom(const CppSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.CppSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void CppSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.CppSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CppSettings::CopyFrom(const CppSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.CppSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CppSettings::IsInitialized() const {
  return true;
}

void CppSettings::InternalSwap(CppSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CppSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PhpSettings::InitAsDefaultInstance() {
  ::google::api::_PhpSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class PhpSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const PhpSettings* msg);
};

const ::google::api::CommonLanguageSettings&
PhpSettings::_Internal::common(const PhpSettings* msg) {
  return *msg->common_;
}
PhpSettings::PhpSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.PhpSettings)
}
PhpSettings::PhpSettings(const PhpSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.PhpSettings)
}

void PhpSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhpSettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

PhpSettings::~PhpSettings() {
  // @@protoc_insertion_point(destructor:google.api.PhpSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PhpSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void PhpSettings::ArenaDtor(void* object) {
  PhpSettings* _this = reinterpret_cast< PhpSettings* >(object);
  (void)_this;
}
void PhpSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PhpSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhpSettings& PhpSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhpSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void PhpSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.PhpSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PhpSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhpSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.PhpSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.PhpSettings)
  return target;
}

size_t PhpSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.PhpSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhpSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.PhpSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const PhpSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhpSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.PhpSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.PhpSettings)
    MergeFrom(*source);
  }
}

void PhpSettings::MergeFrom(const PhpSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.PhpSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void PhpSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.PhpSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhpSettings::CopyFrom(const PhpSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.PhpSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhpSettings::IsInitialized() const {
  return true;
}

void PhpSettings::InternalSwap(PhpSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PhpSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PythonSettings_ExperimentalFeatures::InitAsDefaultInstance() {
}
class PythonSettings_ExperimentalFeatures::_Internal {
 public:
};

PythonSettings_ExperimentalFeatures::PythonSettings_ExperimentalFeatures(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.PythonSettings.ExperimentalFeatures)
}
PythonSettings_ExperimentalFeatures::PythonSettings_ExperimentalFeatures(const PythonSettings_ExperimentalFeatures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rest_async_io_enabled_ = from.rest_async_io_enabled_;
  // @@protoc_insertion_point(copy_constructor:google.api.PythonSettings.ExperimentalFeatures)
}

void PythonSettings_ExperimentalFeatures::SharedCtor() {
  rest_async_io_enabled_ = false;
}

PythonSettings_ExperimentalFeatures::~PythonSettings_ExperimentalFeatures() {
  // @@protoc_insertion_point(destructor:google.api.PythonSettings.ExperimentalFeatures)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PythonSettings_ExperimentalFeatures::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PythonSettings_ExperimentalFeatures::ArenaDtor(void* object) {
  PythonSettings_ExperimentalFeatures* _this = reinterpret_cast< PythonSettings_ExperimentalFeatures* >(object);
  (void)_this;
}
void PythonSettings_ExperimentalFeatures::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PythonSettings_ExperimentalFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PythonSettings_ExperimentalFeatures& PythonSettings_ExperimentalFeatures::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PythonSettings_ExperimentalFeatures_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void PythonSettings_ExperimentalFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.PythonSettings.ExperimentalFeatures)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rest_async_io_enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PythonSettings_ExperimentalFeatures::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool rest_async_io_enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rest_async_io_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PythonSettings_ExperimentalFeatures::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.PythonSettings.ExperimentalFeatures)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rest_async_io_enabled = 1;
  if (this->rest_async_io_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_rest_async_io_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.PythonSettings.ExperimentalFeatures)
  return target;
}

size_t PythonSettings_ExperimentalFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.PythonSettings.ExperimentalFeatures)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool rest_async_io_enabled = 1;
  if (this->rest_async_io_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PythonSettings_ExperimentalFeatures::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.PythonSettings.ExperimentalFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const PythonSettings_ExperimentalFeatures* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PythonSettings_ExperimentalFeatures>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.PythonSettings.ExperimentalFeatures)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.PythonSettings.ExperimentalFeatures)
    MergeFrom(*source);
  }
}

void PythonSettings_ExperimentalFeatures::MergeFrom(const PythonSettings_ExperimentalFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.PythonSettings.ExperimentalFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rest_async_io_enabled() != 0) {
    _internal_set_rest_async_io_enabled(from._internal_rest_async_io_enabled());
  }
}

void PythonSettings_ExperimentalFeatures::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.PythonSettings.ExperimentalFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PythonSettings_ExperimentalFeatures::CopyFrom(const PythonSettings_ExperimentalFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.PythonSettings.ExperimentalFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PythonSettings_ExperimentalFeatures::IsInitialized() const {
  return true;
}

void PythonSettings_ExperimentalFeatures::InternalSwap(PythonSettings_ExperimentalFeatures* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(rest_async_io_enabled_, other->rest_async_io_enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PythonSettings_ExperimentalFeatures::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PythonSettings::InitAsDefaultInstance() {
  ::google::api::_PythonSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
  ::google::api::_PythonSettings_default_instance_._instance.get_mutable()->experimental_features_ = const_cast< ::google::api::PythonSettings_ExperimentalFeatures*>(
      ::google::api::PythonSettings_ExperimentalFeatures::internal_default_instance());
}
class PythonSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const PythonSettings* msg);
  static const ::google::api::PythonSettings_ExperimentalFeatures& experimental_features(const PythonSettings* msg);
};

const ::google::api::CommonLanguageSettings&
PythonSettings::_Internal::common(const PythonSettings* msg) {
  return *msg->common_;
}
const ::google::api::PythonSettings_ExperimentalFeatures&
PythonSettings::_Internal::experimental_features(const PythonSettings* msg) {
  return *msg->experimental_features_;
}
PythonSettings::PythonSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.PythonSettings)
}
PythonSettings::PythonSettings(const PythonSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  if (from._internal_has_experimental_features()) {
    experimental_features_ = new ::google::api::PythonSettings_ExperimentalFeatures(*from.experimental_features_);
  } else {
    experimental_features_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.PythonSettings)
}

void PythonSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PythonSettings_google_2fapi_2fclient_2eproto.base);
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&experimental_features_) -
      reinterpret_cast<char*>(&common_)) + sizeof(experimental_features_));
}

PythonSettings::~PythonSettings() {
  // @@protoc_insertion_point(destructor:google.api.PythonSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PythonSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete experimental_features_;
}

void PythonSettings::ArenaDtor(void* object) {
  PythonSettings* _this = reinterpret_cast< PythonSettings* >(object);
  (void)_this;
}
void PythonSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PythonSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PythonSettings& PythonSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PythonSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void PythonSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.PythonSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  if (GetArena() == nullptr && experimental_features_ != nullptr) {
    delete experimental_features_;
  }
  experimental_features_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PythonSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.PythonSettings.ExperimentalFeatures experimental_features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_experimental_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PythonSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.PythonSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  // .google.api.PythonSettings.ExperimentalFeatures experimental_features = 2;
  if (this->has_experimental_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::experimental_features(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.PythonSettings)
  return target;
}

size_t PythonSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.PythonSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.api.PythonSettings.ExperimentalFeatures experimental_features = 2;
  if (this->has_experimental_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *experimental_features_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PythonSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.PythonSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const PythonSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PythonSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.PythonSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.PythonSettings)
    MergeFrom(*source);
  }
}

void PythonSettings::MergeFrom(const PythonSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.PythonSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
  if (from.has_experimental_features()) {
    _internal_mutable_experimental_features()->::google::api::PythonSettings_ExperimentalFeatures::MergeFrom(from._internal_experimental_features());
  }
}

void PythonSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.PythonSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PythonSettings::CopyFrom(const PythonSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.PythonSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PythonSettings::IsInitialized() const {
  return true;
}

void PythonSettings::InternalSwap(PythonSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PythonSettings, experimental_features_)
      + sizeof(PythonSettings::experimental_features_)
      - PROTOBUF_FIELD_OFFSET(PythonSettings, common_)>(
          reinterpret_cast<char*>(&common_),
          reinterpret_cast<char*>(&other->common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PythonSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NodeSettings::InitAsDefaultInstance() {
  ::google::api::_NodeSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class NodeSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const NodeSettings* msg);
};

const ::google::api::CommonLanguageSettings&
NodeSettings::_Internal::common(const NodeSettings* msg) {
  return *msg->common_;
}
NodeSettings::NodeSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.NodeSettings)
}
NodeSettings::NodeSettings(const NodeSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.NodeSettings)
}

void NodeSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NodeSettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

NodeSettings::~NodeSettings() {
  // @@protoc_insertion_point(destructor:google.api.NodeSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NodeSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void NodeSettings::ArenaDtor(void* object) {
  NodeSettings* _this = reinterpret_cast< NodeSettings* >(object);
  (void)_this;
}
void NodeSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NodeSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeSettings& NodeSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NodeSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void NodeSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.NodeSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.NodeSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.NodeSettings)
  return target;
}

size_t NodeSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.NodeSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.NodeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.NodeSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.NodeSettings)
    MergeFrom(*source);
  }
}

void NodeSettings::MergeFrom(const NodeSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.NodeSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void NodeSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.NodeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeSettings::CopyFrom(const NodeSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.NodeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeSettings::IsInitialized() const {
  return true;
}

void NodeSettings::InternalSwap(NodeSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DotnetSettings_RenamedServicesEntry_DoNotUse::DotnetSettings_RenamedServicesEntry_DoNotUse() {}
DotnetSettings_RenamedServicesEntry_DoNotUse::DotnetSettings_RenamedServicesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DotnetSettings_RenamedServicesEntry_DoNotUse::MergeFrom(const DotnetSettings_RenamedServicesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DotnetSettings_RenamedServicesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DotnetSettings_RenamedServicesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DotnetSettings_RenamedResourcesEntry_DoNotUse::DotnetSettings_RenamedResourcesEntry_DoNotUse() {}
DotnetSettings_RenamedResourcesEntry_DoNotUse::DotnetSettings_RenamedResourcesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DotnetSettings_RenamedResourcesEntry_DoNotUse::MergeFrom(const DotnetSettings_RenamedResourcesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DotnetSettings_RenamedResourcesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DotnetSettings_RenamedResourcesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DotnetSettings::InitAsDefaultInstance() {
  ::google::api::_DotnetSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class DotnetSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const DotnetSettings* msg);
};

const ::google::api::CommonLanguageSettings&
DotnetSettings::_Internal::common(const DotnetSettings* msg) {
  return *msg->common_;
}
DotnetSettings::DotnetSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  renamed_services_(arena),
  renamed_resources_(arena),
  ignored_resources_(arena),
  forced_namespace_aliases_(arena),
  handwritten_signatures_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.DotnetSettings)
}
DotnetSettings::DotnetSettings(const DotnetSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ignored_resources_(from.ignored_resources_),
      forced_namespace_aliases_(from.forced_namespace_aliases_),
      handwritten_signatures_(from.handwritten_signatures_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  renamed_services_.MergeFrom(from.renamed_services_);
  renamed_resources_.MergeFrom(from.renamed_resources_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.DotnetSettings)
}

void DotnetSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DotnetSettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

DotnetSettings::~DotnetSettings() {
  // @@protoc_insertion_point(destructor:google.api.DotnetSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DotnetSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void DotnetSettings::ArenaDtor(void* object) {
  DotnetSettings* _this = reinterpret_cast< DotnetSettings* >(object);
  (void)_this;
}
void DotnetSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DotnetSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DotnetSettings& DotnetSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DotnetSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void DotnetSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.DotnetSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  renamed_services_.Clear();
  renamed_resources_.Clear();
  ignored_resources_.Clear();
  forced_namespace_aliases_.Clear();
  handwritten_signatures_.Clear();
  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DotnetSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> renamed_services = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&renamed_services_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> renamed_resources = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&renamed_resources_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string ignored_resources = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ignored_resources();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.DotnetSettings.ignored_resources"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string forced_namespace_aliases = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_forced_namespace_aliases();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.DotnetSettings.forced_namespace_aliases"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string handwritten_signatures = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_handwritten_signatures();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.DotnetSettings.handwritten_signatures"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DotnetSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.DotnetSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  // map<string, string> renamed_services = 2;
  if (!this->_internal_renamed_services().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedServicesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_renamed_services().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_renamed_services().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_renamed_services().begin();
          it != this->_internal_renamed_services().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DotnetSettings_RenamedServicesEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_renamed_services().begin();
          it != this->_internal_renamed_services().end(); ++it) {
        target = DotnetSettings_RenamedServicesEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> renamed_resources = 3;
  if (!this->_internal_renamed_resources().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.DotnetSettings.RenamedResourcesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_renamed_resources().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_renamed_resources().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_renamed_resources().begin();
          it != this->_internal_renamed_resources().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DotnetSettings_RenamedResourcesEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_renamed_resources().begin();
          it != this->_internal_renamed_resources().end(); ++it) {
        target = DotnetSettings_RenamedResourcesEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated string ignored_resources = 4;
  for (int i = 0, n = this->_internal_ignored_resources_size(); i < n; i++) {
    const auto& s = this->_internal_ignored_resources(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.ignored_resources");
    target = stream->WriteString(4, s, target);
  }

  // repeated string forced_namespace_aliases = 5;
  for (int i = 0, n = this->_internal_forced_namespace_aliases_size(); i < n; i++) {
    const auto& s = this->_internal_forced_namespace_aliases(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.forced_namespace_aliases");
    target = stream->WriteString(5, s, target);
  }

  // repeated string handwritten_signatures = 6;
  for (int i = 0, n = this->_internal_handwritten_signatures_size(); i < n; i++) {
    const auto& s = this->_internal_handwritten_signatures(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.DotnetSettings.handwritten_signatures");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.DotnetSettings)
  return target;
}

size_t DotnetSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.DotnetSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> renamed_services = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_renamed_services_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_renamed_services().begin();
      it != this->_internal_renamed_services().end(); ++it) {
    total_size += DotnetSettings_RenamedServicesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> renamed_resources = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_renamed_resources_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_renamed_resources().begin();
      it != this->_internal_renamed_resources().end(); ++it) {
    total_size += DotnetSettings_RenamedResourcesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated string ignored_resources = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(ignored_resources_.size());
  for (int i = 0, n = ignored_resources_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      ignored_resources_.Get(i));
  }

  // repeated string forced_namespace_aliases = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(forced_namespace_aliases_.size());
  for (int i = 0, n = forced_namespace_aliases_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      forced_namespace_aliases_.Get(i));
  }

  // repeated string handwritten_signatures = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(handwritten_signatures_.size());
  for (int i = 0, n = handwritten_signatures_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      handwritten_signatures_.Get(i));
  }

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DotnetSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.DotnetSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const DotnetSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DotnetSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.DotnetSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.DotnetSettings)
    MergeFrom(*source);
  }
}

void DotnetSettings::MergeFrom(const DotnetSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.DotnetSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  renamed_services_.MergeFrom(from.renamed_services_);
  renamed_resources_.MergeFrom(from.renamed_resources_);
  ignored_resources_.MergeFrom(from.ignored_resources_);
  forced_namespace_aliases_.MergeFrom(from.forced_namespace_aliases_);
  handwritten_signatures_.MergeFrom(from.handwritten_signatures_);
  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void DotnetSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.DotnetSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotnetSettings::CopyFrom(const DotnetSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.DotnetSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotnetSettings::IsInitialized() const {
  return true;
}

void DotnetSettings::InternalSwap(DotnetSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  renamed_services_.Swap(&other->renamed_services_);
  renamed_resources_.Swap(&other->renamed_resources_);
  ignored_resources_.InternalSwap(&other->ignored_resources_);
  forced_namespace_aliases_.InternalSwap(&other->forced_namespace_aliases_);
  handwritten_signatures_.InternalSwap(&other->handwritten_signatures_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DotnetSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RubySettings::InitAsDefaultInstance() {
  ::google::api::_RubySettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class RubySettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const RubySettings* msg);
};

const ::google::api::CommonLanguageSettings&
RubySettings::_Internal::common(const RubySettings* msg) {
  return *msg->common_;
}
RubySettings::RubySettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.RubySettings)
}
RubySettings::RubySettings(const RubySettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.RubySettings)
}

void RubySettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RubySettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

RubySettings::~RubySettings() {
  // @@protoc_insertion_point(destructor:google.api.RubySettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RubySettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void RubySettings::ArenaDtor(void* object) {
  RubySettings* _this = reinterpret_cast< RubySettings* >(object);
  (void)_this;
}
void RubySettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RubySettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RubySettings& RubySettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RubySettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void RubySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.RubySettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RubySettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RubySettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.RubySettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.RubySettings)
  return target;
}

size_t RubySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.RubySettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RubySettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.RubySettings)
  GOOGLE_DCHECK_NE(&from, this);
  const RubySettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RubySettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.RubySettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.RubySettings)
    MergeFrom(*source);
  }
}

void RubySettings::MergeFrom(const RubySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.RubySettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void RubySettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.RubySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RubySettings::CopyFrom(const RubySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.RubySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RubySettings::IsInitialized() const {
  return true;
}

void RubySettings::InternalSwap(RubySettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RubySettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GoSettings::InitAsDefaultInstance() {
  ::google::api::_GoSettings_default_instance_._instance.get_mutable()->common_ = const_cast< ::google::api::CommonLanguageSettings*>(
      ::google::api::CommonLanguageSettings::internal_default_instance());
}
class GoSettings::_Internal {
 public:
  static const ::google::api::CommonLanguageSettings& common(const GoSettings* msg);
};

const ::google::api::CommonLanguageSettings&
GoSettings::_Internal::common(const GoSettings* msg) {
  return *msg->common_;
}
GoSettings::GoSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.GoSettings)
}
GoSettings::GoSettings(const GoSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    common_ = new ::google::api::CommonLanguageSettings(*from.common_);
  } else {
    common_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.GoSettings)
}

void GoSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoSettings_google_2fapi_2fclient_2eproto.base);
  common_ = nullptr;
}

GoSettings::~GoSettings() {
  // @@protoc_insertion_point(destructor:google.api.GoSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete common_;
}

void GoSettings::ArenaDtor(void* object) {
  GoSettings* _this = reinterpret_cast< GoSettings* >(object);
  (void)_this;
}
void GoSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoSettings& GoSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void GoSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.GoSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && common_ != nullptr) {
    delete common_;
  }
  common_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.CommonLanguageSettings common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.GoSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::common(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.GoSettings)
  return target;
}

size_t GoSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.GoSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.CommonLanguageSettings common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *common_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.GoSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const GoSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.GoSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.GoSettings)
    MergeFrom(*source);
  }
}

void GoSettings::MergeFrom(const GoSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.GoSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    _internal_mutable_common()->::google::api::CommonLanguageSettings::MergeFrom(from._internal_common());
  }
}

void GoSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.GoSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoSettings::CopyFrom(const GoSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.GoSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoSettings::IsInitialized() const {
  return true;
}

void GoSettings::InternalSwap(GoSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(common_, other->common_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MethodSettings_LongRunning::InitAsDefaultInstance() {
  ::google::api::_MethodSettings_LongRunning_default_instance_._instance.get_mutable()->initial_poll_delay_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::google::api::_MethodSettings_LongRunning_default_instance_._instance.get_mutable()->max_poll_delay_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::google::api::_MethodSettings_LongRunning_default_instance_._instance.get_mutable()->total_poll_timeout_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
}
class MethodSettings_LongRunning::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& initial_poll_delay(const MethodSettings_LongRunning* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& max_poll_delay(const MethodSettings_LongRunning* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& total_poll_timeout(const MethodSettings_LongRunning* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
MethodSettings_LongRunning::_Internal::initial_poll_delay(const MethodSettings_LongRunning* msg) {
  return *msg->initial_poll_delay_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
MethodSettings_LongRunning::_Internal::max_poll_delay(const MethodSettings_LongRunning* msg) {
  return *msg->max_poll_delay_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
MethodSettings_LongRunning::_Internal::total_poll_timeout(const MethodSettings_LongRunning* msg) {
  return *msg->total_poll_timeout_;
}
void MethodSettings_LongRunning::clear_initial_poll_delay() {
  if (GetArena() == nullptr && initial_poll_delay_ != nullptr) {
    delete initial_poll_delay_;
  }
  initial_poll_delay_ = nullptr;
}
void MethodSettings_LongRunning::clear_max_poll_delay() {
  if (GetArena() == nullptr && max_poll_delay_ != nullptr) {
    delete max_poll_delay_;
  }
  max_poll_delay_ = nullptr;
}
void MethodSettings_LongRunning::clear_total_poll_timeout() {
  if (GetArena() == nullptr && total_poll_timeout_ != nullptr) {
    delete total_poll_timeout_;
  }
  total_poll_timeout_ = nullptr;
}
MethodSettings_LongRunning::MethodSettings_LongRunning(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MethodSettings.LongRunning)
}
MethodSettings_LongRunning::MethodSettings_LongRunning(const MethodSettings_LongRunning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_initial_poll_delay()) {
    initial_poll_delay_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.initial_poll_delay_);
  } else {
    initial_poll_delay_ = nullptr;
  }
  if (from._internal_has_max_poll_delay()) {
    max_poll_delay_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.max_poll_delay_);
  } else {
    max_poll_delay_ = nullptr;
  }
  if (from._internal_has_total_poll_timeout()) {
    total_poll_timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.total_poll_timeout_);
  } else {
    total_poll_timeout_ = nullptr;
  }
  poll_delay_multiplier_ = from.poll_delay_multiplier_;
  // @@protoc_insertion_point(copy_constructor:google.api.MethodSettings.LongRunning)
}

void MethodSettings_LongRunning::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto.base);
  ::memset(&initial_poll_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&poll_delay_multiplier_) -
      reinterpret_cast<char*>(&initial_poll_delay_)) + sizeof(poll_delay_multiplier_));
}

MethodSettings_LongRunning::~MethodSettings_LongRunning() {
  // @@protoc_insertion_point(destructor:google.api.MethodSettings.LongRunning)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MethodSettings_LongRunning::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete initial_poll_delay_;
  if (this != internal_default_instance()) delete max_poll_delay_;
  if (this != internal_default_instance()) delete total_poll_timeout_;
}

void MethodSettings_LongRunning::ArenaDtor(void* object) {
  MethodSettings_LongRunning* _this = reinterpret_cast< MethodSettings_LongRunning* >(object);
  (void)_this;
}
void MethodSettings_LongRunning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MethodSettings_LongRunning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MethodSettings_LongRunning& MethodSettings_LongRunning::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MethodSettings_LongRunning_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void MethodSettings_LongRunning::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MethodSettings.LongRunning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && initial_poll_delay_ != nullptr) {
    delete initial_poll_delay_;
  }
  initial_poll_delay_ = nullptr;
  if (GetArena() == nullptr && max_poll_delay_ != nullptr) {
    delete max_poll_delay_;
  }
  max_poll_delay_ = nullptr;
  if (GetArena() == nullptr && total_poll_timeout_ != nullptr) {
    delete total_poll_timeout_;
  }
  total_poll_timeout_ = nullptr;
  poll_delay_multiplier_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MethodSettings_LongRunning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Duration initial_poll_delay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_poll_delay(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float poll_delay_multiplier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          poll_delay_multiplier_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration max_poll_delay = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_poll_delay(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration total_poll_timeout = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_total_poll_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MethodSettings_LongRunning::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MethodSettings.LongRunning)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration initial_poll_delay = 1;
  if (this->has_initial_poll_delay()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::initial_poll_delay(this), target, stream);
  }

  // float poll_delay_multiplier = 2;
  if (!(this->poll_delay_multiplier() <= 0 && this->poll_delay_multiplier() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_poll_delay_multiplier(), target);
  }

  // .google.protobuf.Duration max_poll_delay = 3;
  if (this->has_max_poll_delay()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::max_poll_delay(this), target, stream);
  }

  // .google.protobuf.Duration total_poll_timeout = 4;
  if (this->has_total_poll_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::total_poll_timeout(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MethodSettings.LongRunning)
  return target;
}

size_t MethodSettings_LongRunning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MethodSettings.LongRunning)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration initial_poll_delay = 1;
  if (this->has_initial_poll_delay()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *initial_poll_delay_);
  }

  // .google.protobuf.Duration max_poll_delay = 3;
  if (this->has_max_poll_delay()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *max_poll_delay_);
  }

  // .google.protobuf.Duration total_poll_timeout = 4;
  if (this->has_total_poll_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *total_poll_timeout_);
  }

  // float poll_delay_multiplier = 2;
  if (!(this->poll_delay_multiplier() <= 0 && this->poll_delay_multiplier() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MethodSettings_LongRunning::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MethodSettings.LongRunning)
  GOOGLE_DCHECK_NE(&from, this);
  const MethodSettings_LongRunning* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MethodSettings_LongRunning>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MethodSettings.LongRunning)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MethodSettings.LongRunning)
    MergeFrom(*source);
  }
}

void MethodSettings_LongRunning::MergeFrom(const MethodSettings_LongRunning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MethodSettings.LongRunning)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_initial_poll_delay()) {
    _internal_mutable_initial_poll_delay()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_initial_poll_delay());
  }
  if (from.has_max_poll_delay()) {
    _internal_mutable_max_poll_delay()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_max_poll_delay());
  }
  if (from.has_total_poll_timeout()) {
    _internal_mutable_total_poll_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_total_poll_timeout());
  }
  if (!(from.poll_delay_multiplier() <= 0 && from.poll_delay_multiplier() >= 0)) {
    _internal_set_poll_delay_multiplier(from._internal_poll_delay_multiplier());
  }
}

void MethodSettings_LongRunning::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MethodSettings.LongRunning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MethodSettings_LongRunning::CopyFrom(const MethodSettings_LongRunning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MethodSettings.LongRunning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MethodSettings_LongRunning::IsInitialized() const {
  return true;
}

void MethodSettings_LongRunning::InternalSwap(MethodSettings_LongRunning* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MethodSettings_LongRunning, poll_delay_multiplier_)
      + sizeof(MethodSettings_LongRunning::poll_delay_multiplier_)
      - PROTOBUF_FIELD_OFFSET(MethodSettings_LongRunning, initial_poll_delay_)>(
          reinterpret_cast<char*>(&initial_poll_delay_),
          reinterpret_cast<char*>(&other->initial_poll_delay_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MethodSettings_LongRunning::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MethodSettings::InitAsDefaultInstance() {
  ::google::api::_MethodSettings_default_instance_._instance.get_mutable()->long_running_ = const_cast< ::google::api::MethodSettings_LongRunning*>(
      ::google::api::MethodSettings_LongRunning::internal_default_instance());
}
class MethodSettings::_Internal {
 public:
  static const ::google::api::MethodSettings_LongRunning& long_running(const MethodSettings* msg);
};

const ::google::api::MethodSettings_LongRunning&
MethodSettings::_Internal::long_running(const MethodSettings* msg) {
  return *msg->long_running_;
}
MethodSettings::MethodSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  auto_populated_fields_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MethodSettings)
}
MethodSettings::MethodSettings(const MethodSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      auto_populated_fields_(from.auto_populated_fields_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_selector().empty()) {
    selector_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_selector(),
      GetArena());
  }
  if (from._internal_has_long_running()) {
    long_running_ = new ::google::api::MethodSettings_LongRunning(*from.long_running_);
  } else {
    long_running_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.MethodSettings)
}

void MethodSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MethodSettings_google_2fapi_2fclient_2eproto.base);
  selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  long_running_ = nullptr;
}

MethodSettings::~MethodSettings() {
  // @@protoc_insertion_point(destructor:google.api.MethodSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MethodSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  selector_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete long_running_;
}

void MethodSettings::ArenaDtor(void* object) {
  MethodSettings* _this = reinterpret_cast< MethodSettings* >(object);
  (void)_this;
}
void MethodSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MethodSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MethodSettings& MethodSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MethodSettings_google_2fapi_2fclient_2eproto.base);
  return *internal_default_instance();
}


void MethodSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MethodSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auto_populated_fields_.Clear();
  selector_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && long_running_ != nullptr) {
    delete long_running_;
  }
  long_running_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MethodSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string selector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_selector();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MethodSettings.selector"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.MethodSettings.LongRunning long_running = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_long_running(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string auto_populated_fields = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_auto_populated_fields();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.api.MethodSettings.auto_populated_fields"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MethodSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MethodSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selector().data(), static_cast<int>(this->_internal_selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MethodSettings.selector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_selector(), target);
  }

  // .google.api.MethodSettings.LongRunning long_running = 2;
  if (this->has_long_running()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::long_running(this), target, stream);
  }

  // repeated string auto_populated_fields = 3;
  for (int i = 0, n = this->_internal_auto_populated_fields_size(); i < n; i++) {
    const auto& s = this->_internal_auto_populated_fields(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.MethodSettings.auto_populated_fields");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MethodSettings)
  return target;
}

size_t MethodSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MethodSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string auto_populated_fields = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(auto_populated_fields_.size());
  for (int i = 0, n = auto_populated_fields_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      auto_populated_fields_.Get(i));
  }

  // string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selector());
  }

  // .google.api.MethodSettings.LongRunning long_running = 2;
  if (this->has_long_running()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *long_running_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MethodSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MethodSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const MethodSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MethodSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MethodSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MethodSettings)
    MergeFrom(*source);
  }
}

void MethodSettings::MergeFrom(const MethodSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MethodSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  auto_populated_fields_.MergeFrom(from.auto_populated_fields_);
  if (from.selector().size() > 0) {
    _internal_set_selector(from._internal_selector());
  }
  if (from.has_long_running()) {
    _internal_mutable_long_running()->::google::api::MethodSettings_LongRunning::MergeFrom(from._internal_long_running());
  }
}

void MethodSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MethodSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MethodSettings::CopyFrom(const MethodSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MethodSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MethodSettings::IsInitialized() const {
  return true;
}

void MethodSettings::InternalSwap(MethodSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  auto_populated_fields_.InternalSwap(&other->auto_populated_fields_);
  selector_.Swap(&other->selector_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(long_running_, other->long_running_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MethodSettings::GetMetadata() const {
  return GetMetadataStatic();
}

const std::string method_signature_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedStringTypeTraits, 9, false >
  method_signature(kMethodSignatureFieldNumber, method_signature_default);
const std::string default_host_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  default_host(kDefaultHostFieldNumber, default_host_default);
const std::string oauth_scopes_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  oauth_scopes(kOauthScopesFieldNumber, oauth_scopes_default);
const std::string api_version_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  api_version(kApiVersionFieldNumber, api_version_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::CommonLanguageSettings* Arena::CreateMaybeMessage< ::google::api::CommonLanguageSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::CommonLanguageSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::ClientLibrarySettings* Arena::CreateMaybeMessage< ::google::api::ClientLibrarySettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::ClientLibrarySettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::Publishing* Arena::CreateMaybeMessage< ::google::api::Publishing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::Publishing >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::JavaSettings_ServiceClassNamesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::JavaSettings* Arena::CreateMaybeMessage< ::google::api::JavaSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::JavaSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::CppSettings* Arena::CreateMaybeMessage< ::google::api::CppSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::CppSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::PhpSettings* Arena::CreateMaybeMessage< ::google::api::PhpSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::PhpSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::PythonSettings_ExperimentalFeatures* Arena::CreateMaybeMessage< ::google::api::PythonSettings_ExperimentalFeatures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::PythonSettings_ExperimentalFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::PythonSettings* Arena::CreateMaybeMessage< ::google::api::PythonSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::PythonSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::NodeSettings* Arena::CreateMaybeMessage< ::google::api::NodeSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::NodeSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::DotnetSettings_RenamedServicesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::DotnetSettings_RenamedResourcesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::DotnetSettings* Arena::CreateMaybeMessage< ::google::api::DotnetSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::DotnetSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::RubySettings* Arena::CreateMaybeMessage< ::google::api::RubySettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::RubySettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::GoSettings* Arena::CreateMaybeMessage< ::google::api::GoSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::GoSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MethodSettings_LongRunning* Arena::CreateMaybeMessage< ::google::api::MethodSettings_LongRunning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MethodSettings_LongRunning >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::MethodSettings* Arena::CreateMaybeMessage< ::google::api::MethodSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::MethodSettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
