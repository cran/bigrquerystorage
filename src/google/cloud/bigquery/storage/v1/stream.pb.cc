// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/storage/v1/stream.proto

#include "google/cloud/bigquery/storage/v1/stream.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrowSerializationOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AvroSerializationOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fcloud_2fbigquery_2fstorage_2fv1_2ftable_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TableSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2ftable_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {
class ReadSession_TableModifiersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReadSession_TableModifiers> _instance;
} _ReadSession_TableModifiers_default_instance_;
class ReadSession_TableReadOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReadSession_TableReadOptions> _instance;
  const ::google::cloud::bigquery::storage::v1::ArrowSerializationOptions* arrow_serialization_options_;
  const ::google::cloud::bigquery::storage::v1::AvroSerializationOptions* avro_serialization_options_;
} _ReadSession_TableReadOptions_default_instance_;
class ReadSessionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReadSession> _instance;
  const ::google::cloud::bigquery::storage::v1::AvroSchema* avro_schema_;
  const ::google::cloud::bigquery::storage::v1::ArrowSchema* arrow_schema_;
} _ReadSession_default_instance_;
class ReadStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReadStream> _instance;
} _ReadStream_default_instance_;
class WriteStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteStream> _instance;
} _WriteStream_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
static void InitDefaultsscc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ReadSession();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ReadSession::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_AvroSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base,
      &scc_info_ArrowSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base,
      &scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
      &scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
      &scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,}};

static void InitDefaultsscc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ReadSession_TableModifiers_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ReadSession_TableReadOptions_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto}, {
      &scc_info_ArrowSerializationOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto.base,
      &scc_info_AvroSerializationOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto.base,}};

static void InitDefaultsscc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_ReadStream_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::ReadStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::ReadStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto}, {}};

static void InitDefaultsscc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::storage::v1::_WriteStream_default_instance_;
    new (ptr) ::google::cloud::bigquery::storage::v1::WriteStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::storage::v1::WriteStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_TableSchema_google_2fcloud_2fbigquery_2fstorage_2fv1_2ftable_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers, snapshot_time_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, selected_fields_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, row_restriction_),
  offsetof(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptionsDefaultTypeInternal, arrow_serialization_options_),
  offsetof(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptionsDefaultTypeInternal, avro_serialization_options_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, sample_percentage_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, response_compression_codec_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions, output_format_serialization_options_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, name_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, expire_time_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, data_format_),
  offsetof(::google::cloud::bigquery::storage::v1::ReadSessionDefaultTypeInternal, avro_schema_),
  offsetof(::google::cloud::bigquery::storage::v1::ReadSessionDefaultTypeInternal, arrow_schema_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, table_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, table_modifiers_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, read_options_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, streams_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, estimated_total_bytes_scanned_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, estimated_total_physical_file_size_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, estimated_row_count_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, trace_id_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadSession, schema_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::ReadStream, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, name_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, type_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, commit_time_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, table_schema_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, write_mode_),
  PROTOBUF_FIELD_OFFSET(::google::cloud::bigquery::storage::v1::WriteStream, location_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers)},
  { 6, 18, sizeof(::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions)},
  { 24, -1, sizeof(::google::cloud::bigquery::storage::v1::ReadSession)},
  { 43, -1, sizeof(::google::cloud::bigquery::storage::v1::ReadStream)},
  { 49, -1, sizeof(::google::cloud::bigquery::storage::v1::WriteStream)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ReadSession_TableModifiers_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ReadSession_TableReadOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_ReadStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::cloud::bigquery::storage::v1::_WriteStream_default_instance_),
};

const char descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-google/cloud/bigquery/storage/v1/strea"
  "m.proto\022 google.cloud.bigquery.storage.v"
  "1\032\037google/api/field_behavior.proto\032\031goog"
  "le/api/resource.proto\032,google/cloud/bigq"
  "uery/storage/v1/arrow.proto\032+google/clou"
  "d/bigquery/storage/v1/avro.proto\032,google"
  "/cloud/bigquery/storage/v1/table.proto\032\037"
  "google/protobuf/timestamp.proto\"\303\014\n\013Read"
  "Session\022\021\n\004name\030\001 \001(\tB\003\340A\003\0224\n\013expire_tim"
  "e\030\002 \001(\0132\032.google.protobuf.TimestampB\003\340A\003"
  "\022F\n\013data_format\030\003 \001(\0162,.google.cloud.big"
  "query.storage.v1.DataFormatB\003\340A\005\022H\n\013avro"
  "_schema\030\004 \001(\0132,.google.cloud.bigquery.st"
  "orage.v1.AvroSchemaB\003\340A\003H\000\022J\n\014arrow_sche"
  "ma\030\005 \001(\0132-.google.cloud.bigquery.storage"
  ".v1.ArrowSchemaB\003\340A\003H\000\0224\n\005table\030\006 \001(\tB%\340"
  "A\005\372A\037\n\035bigquery.googleapis.com/Table\022Z\n\017"
  "table_modifiers\030\007 \001(\0132<.google.cloud.big"
  "query.storage.v1.ReadSession.TableModifi"
  "ersB\003\340A\001\022Y\n\014read_options\030\010 \001(\0132>.google."
  "cloud.bigquery.storage.v1.ReadSession.Ta"
  "bleReadOptionsB\003\340A\001\022B\n\007streams\030\n \003(\0132,.g"
  "oogle.cloud.bigquery.storage.v1.ReadStre"
  "amB\003\340A\003\022*\n\035estimated_total_bytes_scanned"
  "\030\014 \001(\003B\003\340A\003\022/\n\"estimated_total_physical_"
  "file_size\030\017 \001(\003B\003\340A\003\022 \n\023estimated_row_co"
  "unt\030\016 \001(\003B\003\340A\003\022\025\n\010trace_id\030\r \001(\tB\003\340A\001\032C\n"
  "\016TableModifiers\0221\n\rsnapshot_time\030\001 \001(\0132\032"
  ".google.protobuf.Timestamp\032\211\005\n\020TableRead"
  "Options\022\027\n\017selected_fields\030\001 \003(\t\022\027\n\017row_"
  "restriction\030\002 \001(\t\022g\n\033arrow_serialization"
  "_options\030\003 \001(\0132;.google.cloud.bigquery.s"
  "torage.v1.ArrowSerializationOptionsB\003\340A\001"
  "H\000\022e\n\032avro_serialization_options\030\004 \001(\0132:"
  ".google.cloud.bigquery.storage.v1.AvroSe"
  "rializationOptionsB\003\340A\001H\000\022#\n\021sample_perc"
  "entage\030\005 \001(\001B\003\340A\001H\001\210\001\001\022\205\001\n\032response_comp"
  "ression_codec\030\006 \001(\0162W.google.cloud.bigqu"
  "ery.storage.v1.ReadSession.TableReadOpti"
  "ons.ResponseCompressionCodecB\003\340A\001H\002\210\001\001\"j"
  "\n\030ResponseCompressionCodec\022*\n&RESPONSE_C"
  "OMPRESSION_CODEC_UNSPECIFIED\020\000\022\"\n\036RESPON"
  "SE_COMPRESSION_CODEC_LZ4\020\002B%\n#output_for"
  "mat_serialization_optionsB\024\n\022_sample_per"
  "centageB\035\n\033_response_compression_codec:k"
  "\352Ah\n*bigquerystorage.googleapis.com/Read"
  "Session\022:projects/{project}/locations/{l"
  "ocation}/sessions/{session}B\010\n\006schema\"\234\001"
  "\n\nReadStream\022\021\n\004name\030\001 \001(\tB\003\340A\003:{\352Ax\n)bi"
  "gquerystorage.googleapis.com/ReadStream\022"
  "Kprojects/{project}/locations/{location}"
  "/sessions/{session}/streams/{stream}\"\373\004\n"
  "\013WriteStream\022\021\n\004name\030\001 \001(\tB\003\340A\003\022E\n\004type\030"
  "\002 \001(\01622.google.cloud.bigquery.storage.v1"
  ".WriteStream.TypeB\003\340A\005\0224\n\013create_time\030\003 "
  "\001(\0132\032.google.protobuf.TimestampB\003\340A\003\0224\n\013"
  "commit_time\030\004 \001(\0132\032.google.protobuf.Time"
  "stampB\003\340A\003\022H\n\014table_schema\030\005 \001(\0132-.googl"
  "e.cloud.bigquery.storage.v1.TableSchemaB"
  "\003\340A\003\022P\n\nwrite_mode\030\007 \001(\01627.google.cloud."
  "bigquery.storage.v1.WriteStream.WriteMod"
  "eB\003\340A\005\022\025\n\010location\030\010 \001(\tB\003\340A\005\"F\n\004Type\022\024\n"
  "\020TYPE_UNSPECIFIED\020\000\022\r\n\tCOMMITTED\020\001\022\013\n\007PE"
  "NDING\020\002\022\014\n\010BUFFERED\020\003\"3\n\tWriteMode\022\032\n\026WR"
  "ITE_MODE_UNSPECIFIED\020\000\022\n\n\006INSERT\020\001:v\352As\n"
  "*bigquerystorage.googleapis.com/WriteStr"
  "eam\022Eprojects/{project}/datasets/{datase"
  "t}/tables/{table}/streams/{stream}*>\n\nDa"
  "taFormat\022\033\n\027DATA_FORMAT_UNSPECIFIED\020\000\022\010\n"
  "\004AVRO\020\001\022\t\n\005ARROW\020\002*I\n\017WriteStreamView\022!\n"
  "\035WRITE_STREAM_VIEW_UNSPECIFIED\020\000\022\t\n\005BASI"
  "C\020\001\022\010\n\004FULL\020\002B\273\001\n$com.google.cloud.bigqu"
  "ery.storage.v1B\013StreamProtoP\001Z>cloud.goo"
  "gle.com/go/bigquery/storage/apiv1/storag"
  "epb;storagepb\252\002 Google.Cloud.BigQuery.St"
  "orage.V1\312\002 Google\\Cloud\\BigQuery\\Storage"
  "\\V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_deps[6] = {
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2farrow_2eproto,
  &::descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2favro_2eproto,
  &::descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2ftable_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_sccs[5] = {
  &scc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
  &scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
  &scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
  &scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
  &scc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto = {
  false, false, descriptor_table_protodef_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto, "google/cloud/bigquery/storage/v1/stream.proto", 3051,
  &descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_once, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_sccs, descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto_deps, 5, 6,
  schemas, file_default_instances, TableStruct_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto::offsets,
  file_level_metadata_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto, 5, file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto, file_level_service_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto)), true);
namespace google {
namespace cloud {
namespace bigquery {
namespace storage {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ReadSession_TableReadOptions_ResponseCompressionCodec_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto);
  return file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[0];
}
bool ReadSession_TableReadOptions_ResponseCompressionCodec_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ReadSession_TableReadOptions_ResponseCompressionCodec ReadSession_TableReadOptions::RESPONSE_COMPRESSION_CODEC_UNSPECIFIED;
constexpr ReadSession_TableReadOptions_ResponseCompressionCodec ReadSession_TableReadOptions::RESPONSE_COMPRESSION_CODEC_LZ4;
constexpr ReadSession_TableReadOptions_ResponseCompressionCodec ReadSession_TableReadOptions::ResponseCompressionCodec_MIN;
constexpr ReadSession_TableReadOptions_ResponseCompressionCodec ReadSession_TableReadOptions::ResponseCompressionCodec_MAX;
constexpr int ReadSession_TableReadOptions::ResponseCompressionCodec_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WriteStream_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto);
  return file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[1];
}
bool WriteStream_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WriteStream_Type WriteStream::TYPE_UNSPECIFIED;
constexpr WriteStream_Type WriteStream::COMMITTED;
constexpr WriteStream_Type WriteStream::PENDING;
constexpr WriteStream_Type WriteStream::BUFFERED;
constexpr WriteStream_Type WriteStream::Type_MIN;
constexpr WriteStream_Type WriteStream::Type_MAX;
constexpr int WriteStream::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WriteStream_WriteMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto);
  return file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[2];
}
bool WriteStream_WriteMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WriteStream_WriteMode WriteStream::WRITE_MODE_UNSPECIFIED;
constexpr WriteStream_WriteMode WriteStream::INSERT;
constexpr WriteStream_WriteMode WriteStream::WriteMode_MIN;
constexpr WriteStream_WriteMode WriteStream::WriteMode_MAX;
constexpr int WriteStream::WriteMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto);
  return file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[3];
}
bool DataFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WriteStreamView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto);
  return file_level_enum_descriptors_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto[4];
}
bool WriteStreamView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ReadSession_TableModifiers::InitAsDefaultInstance() {
  ::google::cloud::bigquery::storage::v1::_ReadSession_TableModifiers_default_instance_._instance.get_mutable()->snapshot_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class ReadSession_TableModifiers::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& snapshot_time(const ReadSession_TableModifiers* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ReadSession_TableModifiers::_Internal::snapshot_time(const ReadSession_TableModifiers* msg) {
  return *msg->snapshot_time_;
}
void ReadSession_TableModifiers::clear_snapshot_time() {
  if (GetArena() == nullptr && snapshot_time_ != nullptr) {
    delete snapshot_time_;
  }
  snapshot_time_ = nullptr;
}
ReadSession_TableModifiers::ReadSession_TableModifiers(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
}
ReadSession_TableModifiers::ReadSession_TableModifiers(const ReadSession_TableModifiers& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_snapshot_time()) {
    snapshot_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.snapshot_time_);
  } else {
    snapshot_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
}

void ReadSession_TableModifiers::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  snapshot_time_ = nullptr;
}

ReadSession_TableModifiers::~ReadSession_TableModifiers() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadSession_TableModifiers::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete snapshot_time_;
}

void ReadSession_TableModifiers::ArenaDtor(void* object) {
  ReadSession_TableModifiers* _this = reinterpret_cast< ReadSession_TableModifiers* >(object);
  (void)_this;
}
void ReadSession_TableModifiers::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadSession_TableModifiers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadSession_TableModifiers& ReadSession_TableModifiers::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReadSession_TableModifiers_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  return *internal_default_instance();
}


void ReadSession_TableModifiers::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && snapshot_time_ != nullptr) {
    delete snapshot_time_;
  }
  snapshot_time_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadSession_TableModifiers::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp snapshot_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_snapshot_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadSession_TableModifiers::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp snapshot_time = 1;
  if (this->has_snapshot_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::snapshot_time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  return target;
}

size_t ReadSession_TableModifiers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp snapshot_time = 1;
  if (this->has_snapshot_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *snapshot_time_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadSession_TableModifiers::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadSession_TableModifiers* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadSession_TableModifiers>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
    MergeFrom(*source);
  }
}

void ReadSession_TableModifiers::MergeFrom(const ReadSession_TableModifiers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_snapshot_time()) {
    _internal_mutable_snapshot_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_snapshot_time());
  }
}

void ReadSession_TableModifiers::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadSession_TableModifiers::CopyFrom(const ReadSession_TableModifiers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableModifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadSession_TableModifiers::IsInitialized() const {
  return true;
}

void ReadSession_TableModifiers::InternalSwap(ReadSession_TableModifiers* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(snapshot_time_, other->snapshot_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadSession_TableModifiers::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReadSession_TableReadOptions::InitAsDefaultInstance() {
  ::google::cloud::bigquery::storage::v1::_ReadSession_TableReadOptions_default_instance_.arrow_serialization_options_ = const_cast< ::google::cloud::bigquery::storage::v1::ArrowSerializationOptions*>(
      ::google::cloud::bigquery::storage::v1::ArrowSerializationOptions::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_ReadSession_TableReadOptions_default_instance_.avro_serialization_options_ = const_cast< ::google::cloud::bigquery::storage::v1::AvroSerializationOptions*>(
      ::google::cloud::bigquery::storage::v1::AvroSerializationOptions::internal_default_instance());
}
class ReadSession_TableReadOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ReadSession_TableReadOptions>()._has_bits_);
  static const ::google::cloud::bigquery::storage::v1::ArrowSerializationOptions& arrow_serialization_options(const ReadSession_TableReadOptions* msg);
  static const ::google::cloud::bigquery::storage::v1::AvroSerializationOptions& avro_serialization_options(const ReadSession_TableReadOptions* msg);
  static void set_has_sample_percentage(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_response_compression_codec(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::cloud::bigquery::storage::v1::ArrowSerializationOptions&
ReadSession_TableReadOptions::_Internal::arrow_serialization_options(const ReadSession_TableReadOptions* msg) {
  return *msg->output_format_serialization_options_.arrow_serialization_options_;
}
const ::google::cloud::bigquery::storage::v1::AvroSerializationOptions&
ReadSession_TableReadOptions::_Internal::avro_serialization_options(const ReadSession_TableReadOptions* msg) {
  return *msg->output_format_serialization_options_.avro_serialization_options_;
}
void ReadSession_TableReadOptions::set_allocated_arrow_serialization_options(::google::cloud::bigquery::storage::v1::ArrowSerializationOptions* arrow_serialization_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_output_format_serialization_options();
  if (arrow_serialization_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(arrow_serialization_options)->GetArena();
    if (message_arena != submessage_arena) {
      arrow_serialization_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arrow_serialization_options, submessage_arena);
    }
    set_has_arrow_serialization_options();
    output_format_serialization_options_.arrow_serialization_options_ = arrow_serialization_options;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.arrow_serialization_options)
}
void ReadSession_TableReadOptions::clear_arrow_serialization_options() {
  if (_internal_has_arrow_serialization_options()) {
    if (GetArena() == nullptr) {
      delete output_format_serialization_options_.arrow_serialization_options_;
    }
    clear_has_output_format_serialization_options();
  }
}
void ReadSession_TableReadOptions::set_allocated_avro_serialization_options(::google::cloud::bigquery::storage::v1::AvroSerializationOptions* avro_serialization_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_output_format_serialization_options();
  if (avro_serialization_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(avro_serialization_options)->GetArena();
    if (message_arena != submessage_arena) {
      avro_serialization_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, avro_serialization_options, submessage_arena);
    }
    set_has_avro_serialization_options();
    output_format_serialization_options_.avro_serialization_options_ = avro_serialization_options;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.avro_serialization_options)
}
void ReadSession_TableReadOptions::clear_avro_serialization_options() {
  if (_internal_has_avro_serialization_options()) {
    if (GetArena() == nullptr) {
      delete output_format_serialization_options_.avro_serialization_options_;
    }
    clear_has_output_format_serialization_options();
  }
}
ReadSession_TableReadOptions::ReadSession_TableReadOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  selected_fields_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
}
ReadSession_TableReadOptions::ReadSession_TableReadOptions(const ReadSession_TableReadOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      selected_fields_(from.selected_fields_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  row_restriction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_row_restriction().empty()) {
    row_restriction_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_row_restriction(),
      GetArena());
  }
  ::memcpy(&sample_percentage_, &from.sample_percentage_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_compression_codec_) -
    reinterpret_cast<char*>(&sample_percentage_)) + sizeof(response_compression_codec_));
  clear_has_output_format_serialization_options();
  switch (from.output_format_serialization_options_case()) {
    case kArrowSerializationOptions: {
      _internal_mutable_arrow_serialization_options()->::google::cloud::bigquery::storage::v1::ArrowSerializationOptions::MergeFrom(from._internal_arrow_serialization_options());
      break;
    }
    case kAvroSerializationOptions: {
      _internal_mutable_avro_serialization_options()->::google::cloud::bigquery::storage::v1::AvroSerializationOptions::MergeFrom(from._internal_avro_serialization_options());
      break;
    }
    case OUTPUT_FORMAT_SERIALIZATION_OPTIONS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
}

void ReadSession_TableReadOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  row_restriction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sample_percentage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_compression_codec_) -
      reinterpret_cast<char*>(&sample_percentage_)) + sizeof(response_compression_codec_));
  clear_has_output_format_serialization_options();
}

ReadSession_TableReadOptions::~ReadSession_TableReadOptions() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadSession_TableReadOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  row_restriction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_output_format_serialization_options()) {
    clear_output_format_serialization_options();
  }
}

void ReadSession_TableReadOptions::ArenaDtor(void* object) {
  ReadSession_TableReadOptions* _this = reinterpret_cast< ReadSession_TableReadOptions* >(object);
  (void)_this;
}
void ReadSession_TableReadOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadSession_TableReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadSession_TableReadOptions& ReadSession_TableReadOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReadSession_TableReadOptions_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  return *internal_default_instance();
}


void ReadSession_TableReadOptions::clear_output_format_serialization_options() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  switch (output_format_serialization_options_case()) {
    case kArrowSerializationOptions: {
      if (GetArena() == nullptr) {
        delete output_format_serialization_options_.arrow_serialization_options_;
      }
      break;
    }
    case kAvroSerializationOptions: {
      if (GetArena() == nullptr) {
        delete output_format_serialization_options_.avro_serialization_options_;
      }
      break;
    }
    case OUTPUT_FORMAT_SERIALIZATION_OPTIONS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OUTPUT_FORMAT_SERIALIZATION_OPTIONS_NOT_SET;
}


void ReadSession_TableReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selected_fields_.Clear();
  row_restriction_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&sample_percentage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_compression_codec_) -
        reinterpret_cast<char*>(&sample_percentage_)) + sizeof(response_compression_codec_));
  }
  clear_output_format_serialization_options();
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadSession_TableReadOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string selected_fields = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_selected_fields();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.selected_fields"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string row_restriction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_row_restriction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.row_restriction"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.ArrowSerializationOptions arrow_serialization_options = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_arrow_serialization_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.AvroSerializationOptions avro_serialization_options = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_avro_serialization_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double sample_percentage = 5 [(.google.api.field_behavior) = OPTIONAL];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_sample_percentage(&has_bits);
          sample_percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.ResponseCompressionCodec response_compression_codec = 6 [(.google.api.field_behavior) = OPTIONAL];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_response_compression_codec(static_cast<::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions_ResponseCompressionCodec>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadSession_TableReadOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string selected_fields = 1;
  for (int i = 0, n = this->_internal_selected_fields_size(); i < n; i++) {
    const auto& s = this->_internal_selected_fields(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.selected_fields");
    target = stream->WriteString(1, s, target);
  }

  // string row_restriction = 2;
  if (this->row_restriction().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_row_restriction().data(), static_cast<int>(this->_internal_row_restriction().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.row_restriction");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_row_restriction(), target);
  }

  // .google.cloud.bigquery.storage.v1.ArrowSerializationOptions arrow_serialization_options = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (_internal_has_arrow_serialization_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::arrow_serialization_options(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.AvroSerializationOptions avro_serialization_options = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (_internal_has_avro_serialization_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::avro_serialization_options(this), target, stream);
  }

  // double sample_percentage = 5 [(.google.api.field_behavior) = OPTIONAL];
  if (_internal_has_sample_percentage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_sample_percentage(), target);
  }

  // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.ResponseCompressionCodec response_compression_codec = 6 [(.google.api.field_behavior) = OPTIONAL];
  if (_internal_has_response_compression_codec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_response_compression_codec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  return target;
}

size_t ReadSession_TableReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string selected_fields = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(selected_fields_.size());
  for (int i = 0, n = selected_fields_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      selected_fields_.Get(i));
  }

  // string row_restriction = 2;
  if (this->row_restriction().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_row_restriction());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // double sample_percentage = 5 [(.google.api.field_behavior) = OPTIONAL];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions.ResponseCompressionCodec response_compression_codec = 6 [(.google.api.field_behavior) = OPTIONAL];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_response_compression_codec());
    }

  }
  switch (output_format_serialization_options_case()) {
    // .google.cloud.bigquery.storage.v1.ArrowSerializationOptions arrow_serialization_options = 3 [(.google.api.field_behavior) = OPTIONAL];
    case kArrowSerializationOptions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *output_format_serialization_options_.arrow_serialization_options_);
      break;
    }
    // .google.cloud.bigquery.storage.v1.AvroSerializationOptions avro_serialization_options = 4 [(.google.api.field_behavior) = OPTIONAL];
    case kAvroSerializationOptions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *output_format_serialization_options_.avro_serialization_options_);
      break;
    }
    case OUTPUT_FORMAT_SERIALIZATION_OPTIONS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadSession_TableReadOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadSession_TableReadOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadSession_TableReadOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
    MergeFrom(*source);
  }
}

void ReadSession_TableReadOptions::MergeFrom(const ReadSession_TableReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  selected_fields_.MergeFrom(from.selected_fields_);
  if (from.row_restriction().size() > 0) {
    _internal_set_row_restriction(from._internal_row_restriction());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      sample_percentage_ = from.sample_percentage_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_compression_codec_ = from.response_compression_codec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.output_format_serialization_options_case()) {
    case kArrowSerializationOptions: {
      _internal_mutable_arrow_serialization_options()->::google::cloud::bigquery::storage::v1::ArrowSerializationOptions::MergeFrom(from._internal_arrow_serialization_options());
      break;
    }
    case kAvroSerializationOptions: {
      _internal_mutable_avro_serialization_options()->::google::cloud::bigquery::storage::v1::AvroSerializationOptions::MergeFrom(from._internal_avro_serialization_options());
      break;
    }
    case OUTPUT_FORMAT_SERIALIZATION_OPTIONS_NOT_SET: {
      break;
    }
  }
}

void ReadSession_TableReadOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadSession_TableReadOptions::CopyFrom(const ReadSession_TableReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadSession_TableReadOptions::IsInitialized() const {
  return true;
}

void ReadSession_TableReadOptions::InternalSwap(ReadSession_TableReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  selected_fields_.InternalSwap(&other->selected_fields_);
  row_restriction_.Swap(&other->row_restriction_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadSession_TableReadOptions, response_compression_codec_)
      + sizeof(ReadSession_TableReadOptions::response_compression_codec_)
      - PROTOBUF_FIELD_OFFSET(ReadSession_TableReadOptions, sample_percentage_)>(
          reinterpret_cast<char*>(&sample_percentage_),
          reinterpret_cast<char*>(&other->sample_percentage_));
  swap(output_format_serialization_options_, other->output_format_serialization_options_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadSession_TableReadOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReadSession::InitAsDefaultInstance() {
  ::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_._instance.get_mutable()->expire_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_.avro_schema_ = const_cast< ::google::cloud::bigquery::storage::v1::AvroSchema*>(
      ::google::cloud::bigquery::storage::v1::AvroSchema::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_.arrow_schema_ = const_cast< ::google::cloud::bigquery::storage::v1::ArrowSchema*>(
      ::google::cloud::bigquery::storage::v1::ArrowSchema::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_._instance.get_mutable()->table_modifiers_ = const_cast< ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers*>(
      ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_ReadSession_default_instance_._instance.get_mutable()->read_options_ = const_cast< ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions*>(
      ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions::internal_default_instance());
}
class ReadSession::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expire_time(const ReadSession* msg);
  static const ::google::cloud::bigquery::storage::v1::AvroSchema& avro_schema(const ReadSession* msg);
  static const ::google::cloud::bigquery::storage::v1::ArrowSchema& arrow_schema(const ReadSession* msg);
  static const ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers& table_modifiers(const ReadSession* msg);
  static const ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions& read_options(const ReadSession* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ReadSession::_Internal::expire_time(const ReadSession* msg) {
  return *msg->expire_time_;
}
const ::google::cloud::bigquery::storage::v1::AvroSchema&
ReadSession::_Internal::avro_schema(const ReadSession* msg) {
  return *msg->schema_.avro_schema_;
}
const ::google::cloud::bigquery::storage::v1::ArrowSchema&
ReadSession::_Internal::arrow_schema(const ReadSession* msg) {
  return *msg->schema_.arrow_schema_;
}
const ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers&
ReadSession::_Internal::table_modifiers(const ReadSession* msg) {
  return *msg->table_modifiers_;
}
const ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions&
ReadSession::_Internal::read_options(const ReadSession* msg) {
  return *msg->read_options_;
}
void ReadSession::clear_expire_time() {
  if (GetArena() == nullptr && expire_time_ != nullptr) {
    delete expire_time_;
  }
  expire_time_ = nullptr;
}
void ReadSession::set_allocated_avro_schema(::google::cloud::bigquery::storage::v1::AvroSchema* avro_schema) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_schema();
  if (avro_schema) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(avro_schema)->GetArena();
    if (message_arena != submessage_arena) {
      avro_schema = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, avro_schema, submessage_arena);
    }
    set_has_avro_schema();
    schema_.avro_schema_ = avro_schema;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.storage.v1.ReadSession.avro_schema)
}
void ReadSession::clear_avro_schema() {
  if (_internal_has_avro_schema()) {
    if (GetArena() == nullptr) {
      delete schema_.avro_schema_;
    }
    clear_has_schema();
  }
}
void ReadSession::set_allocated_arrow_schema(::google::cloud::bigquery::storage::v1::ArrowSchema* arrow_schema) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_schema();
  if (arrow_schema) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(arrow_schema)->GetArena();
    if (message_arena != submessage_arena) {
      arrow_schema = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arrow_schema, submessage_arena);
    }
    set_has_arrow_schema();
    schema_.arrow_schema_ = arrow_schema;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.bigquery.storage.v1.ReadSession.arrow_schema)
}
void ReadSession::clear_arrow_schema() {
  if (_internal_has_arrow_schema()) {
    if (GetArena() == nullptr) {
      delete schema_.arrow_schema_;
    }
    clear_has_schema();
  }
}
ReadSession::ReadSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  streams_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ReadSession)
}
ReadSession::ReadSession(const ReadSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      streams_(from.streams_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  table_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_table().empty()) {
    table_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_table(),
      GetArena());
  }
  trace_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trace_id().empty()) {
    trace_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_trace_id(),
      GetArena());
  }
  if (from._internal_has_expire_time()) {
    expire_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expire_time_);
  } else {
    expire_time_ = nullptr;
  }
  if (from._internal_has_table_modifiers()) {
    table_modifiers_ = new ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers(*from.table_modifiers_);
  } else {
    table_modifiers_ = nullptr;
  }
  if (from._internal_has_read_options()) {
    read_options_ = new ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions(*from.read_options_);
  } else {
    read_options_ = nullptr;
  }
  ::memcpy(&estimated_total_bytes_scanned_, &from.estimated_total_bytes_scanned_,
    static_cast<size_t>(reinterpret_cast<char*>(&estimated_total_physical_file_size_) -
    reinterpret_cast<char*>(&estimated_total_bytes_scanned_)) + sizeof(estimated_total_physical_file_size_));
  clear_has_schema();
  switch (from.schema_case()) {
    case kAvroSchema: {
      _internal_mutable_avro_schema()->::google::cloud::bigquery::storage::v1::AvroSchema::MergeFrom(from._internal_avro_schema());
      break;
    }
    case kArrowSchema: {
      _internal_mutable_arrow_schema()->::google::cloud::bigquery::storage::v1::ArrowSchema::MergeFrom(from._internal_arrow_schema());
      break;
    }
    case SCHEMA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ReadSession)
}

void ReadSession::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  table_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trace_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&expire_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estimated_total_physical_file_size_) -
      reinterpret_cast<char*>(&expire_time_)) + sizeof(estimated_total_physical_file_size_));
  clear_has_schema();
}

ReadSession::~ReadSession() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ReadSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  table_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trace_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expire_time_;
  if (this != internal_default_instance()) delete table_modifiers_;
  if (this != internal_default_instance()) delete read_options_;
  if (has_schema()) {
    clear_schema();
  }
}

void ReadSession::ArenaDtor(void* object) {
  ReadSession* _this = reinterpret_cast< ReadSession* >(object);
  (void)_this;
}
void ReadSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadSession& ReadSession::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReadSession_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  return *internal_default_instance();
}


void ReadSession::clear_schema() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.bigquery.storage.v1.ReadSession)
  switch (schema_case()) {
    case kAvroSchema: {
      if (GetArena() == nullptr) {
        delete schema_.avro_schema_;
      }
      break;
    }
    case kArrowSchema: {
      if (GetArena() == nullptr) {
        delete schema_.arrow_schema_;
      }
      break;
    }
    case SCHEMA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCHEMA_NOT_SET;
}


void ReadSession::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ReadSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  streams_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  table_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  trace_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && expire_time_ != nullptr) {
    delete expire_time_;
  }
  expire_time_ = nullptr;
  if (GetArena() == nullptr && table_modifiers_ != nullptr) {
    delete table_modifiers_;
  }
  table_modifiers_ = nullptr;
  if (GetArena() == nullptr && read_options_ != nullptr) {
    delete read_options_;
  }
  read_options_ = nullptr;
  ::memset(&estimated_total_bytes_scanned_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estimated_total_physical_file_size_) -
      reinterpret_cast<char*>(&estimated_total_bytes_scanned_)) + sizeof(estimated_total_physical_file_size_));
  clear_schema();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadSession.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expire_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expire_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.DataFormat data_format = 3 [(.google.api.field_behavior) = IMMUTABLE];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_data_format(static_cast<::google::cloud::bigquery::storage::v1::DataFormat>(val));
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.AvroSchema avro_schema = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_avro_schema(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.ArrowSchema arrow_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_arrow_schema(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string table = 6 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_table();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadSession.table"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.ReadSession.TableModifiers table_modifiers = 7 [(.google.api.field_behavior) = OPTIONAL];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_table_modifiers(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions read_options = 8 [(.google.api.field_behavior) = OPTIONAL];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_read_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.cloud.bigquery.storage.v1.ReadStream streams = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_streams(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 estimated_total_bytes_scanned = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          estimated_total_bytes_scanned_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trace_id = 13 [(.google.api.field_behavior) = OPTIONAL];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_trace_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadSession.trace_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 estimated_row_count = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          estimated_row_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 estimated_total_physical_file_size = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          estimated_total_physical_file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ReadSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadSession.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp expire_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_expire_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::expire_time(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.DataFormat data_format = 3 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->data_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_data_format(), target);
  }

  // .google.cloud.bigquery.storage.v1.AvroSchema avro_schema = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (_internal_has_avro_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::avro_schema(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.ArrowSchema arrow_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (_internal_has_arrow_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::arrow_schema(this), target, stream);
  }

  // string table = 6 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (this->table().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_table().data(), static_cast<int>(this->_internal_table().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadSession.table");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_table(), target);
  }

  // .google.cloud.bigquery.storage.v1.ReadSession.TableModifiers table_modifiers = 7 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_table_modifiers()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::table_modifiers(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions read_options = 8 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_read_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::read_options(this), target, stream);
  }

  // repeated .google.cloud.bigquery.storage.v1.ReadStream streams = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_streams_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_streams(i), target, stream);
  }

  // int64 estimated_total_bytes_scanned = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_total_bytes_scanned() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_estimated_total_bytes_scanned(), target);
  }

  // string trace_id = 13 [(.google.api.field_behavior) = OPTIONAL];
  if (this->trace_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trace_id().data(), static_cast<int>(this->_internal_trace_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadSession.trace_id");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_trace_id(), target);
  }

  // int64 estimated_row_count = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_row_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->_internal_estimated_row_count(), target);
  }

  // int64 estimated_total_physical_file_size = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_total_physical_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(15, this->_internal_estimated_total_physical_file_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ReadSession)
  return target;
}

size_t ReadSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ReadSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.storage.v1.ReadStream streams = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
  total_size += 1UL * this->_internal_streams_size();
  for (const auto& msg : this->streams_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string table = 6 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (this->table().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_table());
  }

  // string trace_id = 13 [(.google.api.field_behavior) = OPTIONAL];
  if (this->trace_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trace_id());
  }

  // .google.protobuf.Timestamp expire_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_expire_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expire_time_);
  }

  // .google.cloud.bigquery.storage.v1.ReadSession.TableModifiers table_modifiers = 7 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_table_modifiers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *table_modifiers_);
  }

  // .google.cloud.bigquery.storage.v1.ReadSession.TableReadOptions read_options = 8 [(.google.api.field_behavior) = OPTIONAL];
  if (this->has_read_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *read_options_);
  }

  // int64 estimated_total_bytes_scanned = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_total_bytes_scanned() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_estimated_total_bytes_scanned());
  }

  // .google.cloud.bigquery.storage.v1.DataFormat data_format = 3 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->data_format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_data_format());
  }

  // int64 estimated_row_count = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_row_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_estimated_row_count());
  }

  // int64 estimated_total_physical_file_size = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->estimated_total_physical_file_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_estimated_total_physical_file_size());
  }

  switch (schema_case()) {
    // .google.cloud.bigquery.storage.v1.AvroSchema avro_schema = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
    case kAvroSchema: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *schema_.avro_schema_);
      break;
    }
    // .google.cloud.bigquery.storage.v1.ArrowSchema arrow_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
    case kArrowSchema: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *schema_.arrow_schema_);
      break;
    }
    case SCHEMA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ReadSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ReadSession)
    MergeFrom(*source);
  }
}

void ReadSession::MergeFrom(const ReadSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ReadSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  streams_.MergeFrom(from.streams_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.table().size() > 0) {
    _internal_set_table(from._internal_table());
  }
  if (from.trace_id().size() > 0) {
    _internal_set_trace_id(from._internal_trace_id());
  }
  if (from.has_expire_time()) {
    _internal_mutable_expire_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expire_time());
  }
  if (from.has_table_modifiers()) {
    _internal_mutable_table_modifiers()->::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers::MergeFrom(from._internal_table_modifiers());
  }
  if (from.has_read_options()) {
    _internal_mutable_read_options()->::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions::MergeFrom(from._internal_read_options());
  }
  if (from.estimated_total_bytes_scanned() != 0) {
    _internal_set_estimated_total_bytes_scanned(from._internal_estimated_total_bytes_scanned());
  }
  if (from.data_format() != 0) {
    _internal_set_data_format(from._internal_data_format());
  }
  if (from.estimated_row_count() != 0) {
    _internal_set_estimated_row_count(from._internal_estimated_row_count());
  }
  if (from.estimated_total_physical_file_size() != 0) {
    _internal_set_estimated_total_physical_file_size(from._internal_estimated_total_physical_file_size());
  }
  switch (from.schema_case()) {
    case kAvroSchema: {
      _internal_mutable_avro_schema()->::google::cloud::bigquery::storage::v1::AvroSchema::MergeFrom(from._internal_avro_schema());
      break;
    }
    case kArrowSchema: {
      _internal_mutable_arrow_schema()->::google::cloud::bigquery::storage::v1::ArrowSchema::MergeFrom(from._internal_arrow_schema());
      break;
    }
    case SCHEMA_NOT_SET: {
      break;
    }
  }
}

void ReadSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadSession::CopyFrom(const ReadSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ReadSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadSession::IsInitialized() const {
  return true;
}

void ReadSession::InternalSwap(ReadSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  streams_.InternalSwap(&other->streams_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  table_.Swap(&other->table_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  trace_id_.Swap(&other->trace_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadSession, estimated_total_physical_file_size_)
      + sizeof(ReadSession::estimated_total_physical_file_size_)
      - PROTOBUF_FIELD_OFFSET(ReadSession, expire_time_)>(
          reinterpret_cast<char*>(&expire_time_),
          reinterpret_cast<char*>(&other->expire_time_));
  swap(schema_, other->schema_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReadStream::InitAsDefaultInstance() {
}
class ReadStream::_Internal {
 public:
};

ReadStream::ReadStream(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.ReadStream)
}
ReadStream::ReadStream(const ReadStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.ReadStream)
}

void ReadStream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReadStream::~ReadStream() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.ReadStream)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadStream::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadStream::ArenaDtor(void* object) {
  ReadStream* _this = reinterpret_cast< ReadStream* >(object);
  (void)_this;
}
void ReadStream::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadStream& ReadStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReadStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  return *internal_default_instance();
}


void ReadStream::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.ReadStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.ReadStream.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.ReadStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.ReadStream.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.ReadStream)
  return target;
}

size_t ReadStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.ReadStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.ReadStream)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.ReadStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.ReadStream)
    MergeFrom(*source);
  }
}

void ReadStream::MergeFrom(const ReadStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.ReadStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ReadStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.ReadStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadStream::CopyFrom(const ReadStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.ReadStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadStream::IsInitialized() const {
  return true;
}

void ReadStream::InternalSwap(ReadStream* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WriteStream::InitAsDefaultInstance() {
  ::google::cloud::bigquery::storage::v1::_WriteStream_default_instance_._instance.get_mutable()->create_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_WriteStream_default_instance_._instance.get_mutable()->commit_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::storage::v1::_WriteStream_default_instance_._instance.get_mutable()->table_schema_ = const_cast< ::google::cloud::bigquery::storage::v1::TableSchema*>(
      ::google::cloud::bigquery::storage::v1::TableSchema::internal_default_instance());
}
class WriteStream::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& create_time(const WriteStream* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& commit_time(const WriteStream* msg);
  static const ::google::cloud::bigquery::storage::v1::TableSchema& table_schema(const WriteStream* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
WriteStream::_Internal::create_time(const WriteStream* msg) {
  return *msg->create_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
WriteStream::_Internal::commit_time(const WriteStream* msg) {
  return *msg->commit_time_;
}
const ::google::cloud::bigquery::storage::v1::TableSchema&
WriteStream::_Internal::table_schema(const WriteStream* msg) {
  return *msg->table_schema_;
}
void WriteStream::clear_create_time() {
  if (GetArena() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void WriteStream::clear_commit_time() {
  if (GetArena() == nullptr && commit_time_ != nullptr) {
    delete commit_time_;
  }
  commit_time_ = nullptr;
}
void WriteStream::clear_table_schema() {
  if (GetArena() == nullptr && table_schema_ != nullptr) {
    delete table_schema_;
  }
  table_schema_ = nullptr;
}
WriteStream::WriteStream(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.bigquery.storage.v1.WriteStream)
}
WriteStream::WriteStream(const WriteStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArena());
  }
  if (from._internal_has_create_time()) {
    create_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from._internal_has_commit_time()) {
    commit_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.commit_time_);
  } else {
    commit_time_ = nullptr;
  }
  if (from._internal_has_table_schema()) {
    table_schema_ = new ::google::cloud::bigquery::storage::v1::TableSchema(*from.table_schema_);
  } else {
    table_schema_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&write_mode_) -
    reinterpret_cast<char*>(&type_)) + sizeof(write_mode_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.storage.v1.WriteStream)
}

void WriteStream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&write_mode_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(write_mode_));
}

WriteStream::~WriteStream() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.storage.v1.WriteStream)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WriteStream::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete commit_time_;
  if (this != internal_default_instance()) delete table_schema_;
}

void WriteStream::ArenaDtor(void* object) {
  WriteStream* _this = reinterpret_cast< WriteStream* >(object);
  (void)_this;
}
void WriteStream::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteStream& WriteStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WriteStream_google_2fcloud_2fbigquery_2fstorage_2fv1_2fstream_2eproto.base);
  return *internal_default_instance();
}


void WriteStream::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.storage.v1.WriteStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArena() == nullptr && commit_time_ != nullptr) {
    delete commit_time_;
  }
  commit_time_ = nullptr;
  if (GetArena() == nullptr && table_schema_ != nullptr) {
    delete table_schema_;
  }
  table_schema_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&write_mode_) -
      reinterpret_cast<char*>(&type_)) + sizeof(write_mode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.WriteStream.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.WriteStream.Type type = 2 [(.google.api.field_behavior) = IMMUTABLE];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::google::cloud::bigquery::storage::v1::WriteStream_Type>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp commit_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_commit_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.TableSchema table_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_table_schema(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.cloud.bigquery.storage.v1.WriteStream.WriteMode write_mode = 7 [(.google.api.field_behavior) = IMMUTABLE];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_write_mode(static_cast<::google::cloud::bigquery::storage::v1::WriteStream_WriteMode>(val));
        } else goto handle_unusual;
        continue;
      // string location = 8 [(.google.api.field_behavior) = IMMUTABLE];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.cloud.bigquery.storage.v1.WriteStream.location"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.storage.v1.WriteStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.WriteStream.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.cloud.bigquery.storage.v1.WriteStream.Type type = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::create_time(this), target, stream);
  }

  // .google.protobuf.Timestamp commit_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_commit_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::commit_time(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.TableSchema table_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_table_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::table_schema(this), target, stream);
  }

  // .google.cloud.bigquery.storage.v1.WriteStream.WriteMode write_mode = 7 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->write_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_write_mode(), target);
  }

  // string location = 8 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.storage.v1.WriteStream.location");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.storage.v1.WriteStream)
  return target;
}

size_t WriteStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.storage.v1.WriteStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 8 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // .google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_create_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp commit_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_commit_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *commit_time_);
  }

  // .google.cloud.bigquery.storage.v1.TableSchema table_schema = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_table_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *table_schema_);
  }

  // .google.cloud.bigquery.storage.v1.WriteStream.Type type = 2 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .google.cloud.bigquery.storage.v1.WriteStream.WriteMode write_mode = 7 [(.google.api.field_behavior) = IMMUTABLE];
  if (this->write_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_write_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.storage.v1.WriteStream)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.storage.v1.WriteStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.storage.v1.WriteStream)
    MergeFrom(*source);
  }
}

void WriteStream::MergeFrom(const WriteStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.storage.v1.WriteStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.has_create_time()) {
    _internal_mutable_create_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_create_time());
  }
  if (from.has_commit_time()) {
    _internal_mutable_commit_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_commit_time());
  }
  if (from.has_table_schema()) {
    _internal_mutable_table_schema()->::google::cloud::bigquery::storage::v1::TableSchema::MergeFrom(from._internal_table_schema());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.write_mode() != 0) {
    _internal_set_write_mode(from._internal_write_mode());
  }
}

void WriteStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.storage.v1.WriteStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteStream::CopyFrom(const WriteStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.storage.v1.WriteStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteStream::IsInitialized() const {
  return true;
}

void WriteStream::InternalSwap(WriteStream* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WriteStream, write_mode_)
      + sizeof(WriteStream::write_mode_)
      - PROTOBUF_FIELD_OFFSET(WriteStream, create_time_)>(
          reinterpret_cast<char*>(&create_time_),
          reinterpret_cast<char*>(&other->create_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteStream::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ReadSession_TableModifiers >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ReadSession_TableReadOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ReadSession* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ReadSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ReadSession >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::ReadStream* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::ReadStream >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::ReadStream >(arena);
}
template<> PROTOBUF_NOINLINE ::google::cloud::bigquery::storage::v1::WriteStream* Arena::CreateMaybeMessage< ::google::cloud::bigquery::storage::v1::WriteStream >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::bigquery::storage::v1::WriteStream >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
